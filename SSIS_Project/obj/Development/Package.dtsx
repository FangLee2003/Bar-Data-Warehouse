<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/7/2023 2:25:31 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-RG5QA0PH"
  DTS:CreatorName="LAPTOP-RG5QA0PH\ADMIN"
  DTS:DTSID="{29215F9C-278D-48FA-B8DB-26CD9CB5A168}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5467.0"
  DTS:LocaleID="3072"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="235"
  DTS:VersionGUID="{CC0B1499-068C-4506-83DA-166C382B9795}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{837BB781-C7F4-4B98-96D4-7B3274B703B6}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=D:\Bar-Data-Warehouse\Iowa_liquor_sales_2021_50k_rows.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SQL Connection Manager]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{AB1C0E02-65BC-4C1B-BA13-029507690CD0}"
      DTS:ObjectName="SQL Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=FANGLEELAPTOP;User ID=admin;Initial Catalog=SSIS_Project;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;Application Name=SSIS-Package-{AB1C0E02-65BC-4C1B-BA13-029507690CD0}LAPTOP-RG5QA0PH.SSIS_Project.nom;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAsIusy1S1oUet5EXKLsqkVgAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAClNi1/nVyJEikp3BCXFRlPVYLmXQG9TP8SjnIYla9l5wAAAAAOgAAAAAIAACAAAAA5murOqzdIIqGOUg5Lb2ALCn3hMaYrML9zZWVl7eXkahAAAAD5WhBlf2kbkw5YDJWkMwMWQAAAAF8JkToAK42jlJ1SJBX4uQywm7q0V8aHUgkxsDil0Y3R82CVczmFfqhcVDPWxzzqU+608ZS8Fwh0BFo9Lje8kaw</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\DIM_Category"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{59170728-F338-4B62-AA58-D4E07A58C14E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DIM_Category"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DIM_Category\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Category\Aggregate.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Category\Aggregate.Inputs[Aggregate Input 1].Columns[category]"
                      cachedDataType="r8"
                      cachedName="category"
                      lineageId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].Columns[category]" />
                    <inputColumn
                      refId="Package\DIM_Category\Aggregate.Inputs[Aggregate Input 1].Columns[category_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="category_name"
                      lineageId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].Columns[category_name]" />
                    <inputColumn
                      refId="Package\DIM_Category\Aggregate.Inputs[Aggregate Input 1].Columns[pack]"
                      cachedDataType="r8"
                      cachedName="pack"
                      lineageId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].Columns[pack]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Category\Aggregate.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Category\Aggregate.Outputs[Aggregate Output 1].Columns[category]"
                      dataType="r8"
                      lineageId="Package\DIM_Category\Aggregate.Outputs[Aggregate Output 1].Columns[category]"
                      name="category">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Category\Excel Source.Outputs[Excel Source Output].Columns[category]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Category\Aggregate.Outputs[Aggregate Output 1].Columns[category_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Category\Aggregate.Outputs[Aggregate Output 1].Columns[category_name]"
                      name="category_name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Category\Excel Source.Outputs[Excel Source Output].Columns[category_name]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Category\Aggregate.Outputs[Aggregate Output 1].Columns[pack]"
                      dataType="r8"
                      lineageId="Package\DIM_Category\Aggregate.Outputs[Aggregate Output 1].Columns[pack]"
                      name="pack">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Category\Excel Source.Outputs[Excel Source Output].Columns[pack]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Category\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Category\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].Columns[category]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[category]"
                      lineageId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].Columns[category]"
                      name="category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].Columns[category_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[category_name]"
                      length="255"
                      lineageId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].Columns[category_name]"
                      name="category_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].Columns[pack]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[pack]"
                      lineageId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].Columns[pack]"
                      name="pack"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      name="invoice_and_item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[date]"
                      dataType="date"
                      name="date" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_number]"
                      dataType="r8"
                      name="store_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_name]"
                      dataType="wstr"
                      length="255"
                      name="store_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[address]"
                      dataType="wstr"
                      length="255"
                      name="address" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="255"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[zip_code]"
                      dataType="r8"
                      name="zip_code" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_location]"
                      dataType="wstr"
                      length="255"
                      name="store_location" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[county_number]"
                      dataType="r8"
                      name="county_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[county]"
                      dataType="wstr"
                      length="255"
                      name="county" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[category]"
                      dataType="r8"
                      name="category" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[category_name]"
                      dataType="wstr"
                      length="255"
                      name="category_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_number]"
                      dataType="r8"
                      name="vendor_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      name="vendor_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_number]"
                      dataType="r8"
                      name="item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_description]"
                      dataType="wstr"
                      length="255"
                      name="item_description" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[pack]"
                      dataType="r8"
                      name="pack" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottle_volume_ml]"
                      dataType="r8"
                      name="bottle_volume_ml" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_cost]"
                      dataType="r8"
                      name="state_bottle_cost" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_retail]"
                      dataType="r8"
                      name="state_bottle_retail" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottles_sold]"
                      dataType="r8"
                      name="bottles_sold" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[sale_dollars]"
                      dataType="r8"
                      name="sale_dollars" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_liters]"
                      dataType="r8"
                      name="volume_sold_liters" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_gallons]"
                      dataType="r8"
                      name="volume_sold_gallons" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Category\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Category\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Error Output].Columns[category]"
                      dataType="r8"
                      lineageId="Package\DIM_Category\Excel Source.Outputs[Excel Source Error Output].Columns[category]"
                      name="category" />
                    <outputColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Error Output].Columns[category_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Category\Excel Source.Outputs[Excel Source Error Output].Columns[category_name]"
                      name="category_name" />
                    <outputColumn
                      refId="Package\DIM_Category\Excel Source.Outputs[Excel Source Error Output].Columns[pack]"
                      dataType="r8"
                      lineageId="Package\DIM_Category\Excel Source.Outputs[Excel Source Error Output].Columns[pack]"
                      name="pack" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Category\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DIM_Category]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Category\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[category]"
                      cachedDataType="r8"
                      cachedName="category"
                      externalMetadataColumnId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category]"
                      lineageId="Package\DIM_Category\Aggregate.Outputs[Aggregate Output 1].Columns[category]" />
                    <inputColumn
                      refId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[category_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="category_name"
                      externalMetadataColumnId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category_name]"
                      lineageId="Package\DIM_Category\Aggregate.Outputs[Aggregate Output 1].Columns[category_name]" />
                    <inputColumn
                      refId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[pack]"
                      cachedDataType="r8"
                      cachedName="pack"
                      externalMetadataColumnId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[pack]"
                      lineageId="Package\DIM_Category\Aggregate.Outputs[Aggregate Output 1].Columns[pack]" />
                    <inputColumn
                      refId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[category_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="category_key"
                      externalMetadataColumnId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category_key]"
                      lineageId="Package\DIM_Category\Script Component.Outputs[Output 0].Columns[category_key]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category]"
                      dataType="r8"
                      name="category" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category_name]"
                      dataType="wstr"
                      length="255"
                      name="category_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[pack]"
                      dataType="r8"
                      name="pack" />
                    <externalMetadataColumn
                      refId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="category_key" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Category\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Category\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Category\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Category\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Category\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Category\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }
    int count;

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        count++;
        string key = "C" + count.ToString();
        Row.categorykey = key;

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String categorykey
    {
        set
        {
            this[0] = value;
        }
    }
    public bool categorykey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_b7d959ac7b7d4c5c88dc1fe0a4e56271.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{409ac8a1-aec9-4438-a0fa-8a3a4870b442}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_b7d959ac7b7d4c5c88dc1fe0a4e56271</RootNamespace>
    <AssemblyName>SC_b7d959ac7b7d4c5c88dc1fe0a4e56271</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_b7d959ac7b7d4c5c88dc1fe0a4e56271" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b7d959ac7b7d4c5c88dc1fe0a4e56271.Properties.Settings.get_Default():SC_b7d959ac7b7d4c5c88dc1fe0a4e56271.Properties.Sett" +
    "ings")]

namespace SC_b7d959ac7b7d4c5c88dc1fe0a4e56271.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_b7d959ac7b7d4c5c88dc1fe0a4e56271</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_b7d959ac7b7d4c5c88dc1fe0a4e56271</msb:DisplayName>
    <msb:ProjectId>{C403C392-AB4B-4B82-8D4B-37AADEBA69D9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_b7d959ac7b7d4c5c88dc1fe0a4e56271.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_b7d959ac7b7d4c5c88dc1fe0a4e56271")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_b7d959ac7b7d4c5c88dc1fe0a4e56271")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b7d959ac7b7d4c5c88dc1fe0a4e56271.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b7d959ac7b7d4c5c88dc1fe0a4e56271.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_b7d959ac7b7d4c5c88dc1fe0a4e56271.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_b7d959ac7b7d4c5c88dc1fe0a4e56271.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_b7d959ac7b7d4c5c88dc1fe0a4e56271.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_b7d959ac7b7d4c5c88dc1fe0a4e56271.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEGWhmUAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAZjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
MQAAAAAAAEgAAAACAAUAtCEAAKgOAAABAAAAAAAAAFwwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMALAAAAAEAABECAnsBAAAE
F1h9AQAABHIBAABwAnwBAAAEKBIAAAooEwAACgoDBm8GAAAGKh4CKAoAAAYqKgIDBAUoFAAACiom
AhYDKBUAAAoqWgMsCAIWKBYAAAoqcgUAAHBzFwAACnoeAigYAAAKKh4CKBkAAAoqfgIoGgAACgIC
cw4AAAZ9AgAABAICcw8AAAZ9AwAABCqSBHKiAABwGm8bAAAKLBUCBQIDKBwAAAoOBHMFAAAGbwwA
AAYqSisHAgNvDQAABgNvCAAABi3xKgYqOgIoHQAACgIDfQQAAAQqOgIoHQAACgIDfQUAAAQqHgIo
HQAACiqufgYAAAQtHnKyAABw0AcAAAIoHgAACm8fAAAKcyAAAAqABgAABH4GAAAEKhp+BwAABCoe
AoAHAAAEKhp+CAAABCoeAighAAAKKi5zFQAABoAIAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAOAUAACN+AACkBQAAMAYAACNTdHJpbmdzAAAAANQLAAAkAQAAI1VTAPgM
AAAQAAAAI0dVSUQAAAAIDQAAoAEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAA
ACAAAAAIAAAACAAAABYAAAAPAAAAIQAAABAAAAABAAAAAwAAAAUAAAAGAAAAAQAAAAQAAAABAAAA
AADyAgEAAAAAAAYA6gFIBAYAfgJIBAYANgE1BA8AvAQAAAYAYwGKAwYAzQGKAwYArgGKAwYAZQKK
AwYACgKKAwYAIwKKAwYAegGKAwYAlQG5AgoAPgKDAAoABwSDAA4A+AODAAoA0wODAAoAiQWDAAYA
TAVCAwYAGQE1BAYAGARoBAYAxwN1AxIA6QDcAhIASgHcAhIA0QBgAwYA/gBIBAYAJQBCAwYA1QJC
AwYAnANCAwYAtgNCAwYApABCAwYAVQBCAwYAJAaKAwAAAAArAAAAAAABAAEAAQAQAFUDAAAQAAEA
AQABABAA6wMAADkAAgAFAAEAEABrBQAARQACAAoAAQAQADkFAABJAAQADgABABAA+gQAAEkABQAP
AAAAEABvBMsESQAGABAAAAEQACkFywRhAAgAFAABAJkFcQAGADkFdAAGAPoEeAABAHkFfAABAHkF
fAARAEkDgAARAMEAhAARAEUAiABQIAAAAADGAJwCBgABAFggAAAAAMYApwIGAAEAYCAAAAAAxgDx
BYwAAQCYIAAAAACGGCgEBgACAKAgAAAAAIYYKAQpAAIAqyAAAAAAhggQBhAABQC1IAAAAACGCBoD
kgAGAMwgAAAAAIYACAY5AAcA1CAAAAAAhgBTBTkABwDcIAAAAACGGCgEBgAHAPwgAAAAAMYA5AWX
AAcAISEAAAAAxgHdBYwACwA0IQAAAADGAfEFjAAMADYhAAAAAIYYKAShAA0ARSEAAAAAhhgoBKEA
DgBUIQAAAACDGCgEBgAPAFwhAAAAAJMIFASnAA8AiCEAAAAAkwipAKwADwCPIQAAAACTCLUAsQAP
AJchAAAAAJYIXwW3ABAAniEAAAAAhhgoBAYAEACmIQAAAACRGC4EvAAQAAAAAQAMBgAAAQANBAAA
AgAEBQAAAwDhAwAAAQCzAgAAAQCzAgAAAQA0AAAAAgB5AAAAAwANBAAABADhAwAAAQANBAAAAQAM
BgAAAQCPBQAAAQCPBQAAAQCzAgkAKAQBABEAKAQGABkAKAQKACkAKAQQADEAKAQQADkAKAQQAEEA
KAQQAEkAKAQQAFEAKAQQAFkAKAQQAGEAKAQQAGkAKAQGAJkAKAQGALkAKAQVAMkAKAQGAIkAnAIG
AIkApwIGANEA0wIfANkARQUjAHEAKAQpAHEAOQMzAHEAMQMBAOEAKAQQAHEACAY5AHEAUwU5AIkA
KAQGANkAMgU9AIkAGAVEAJEAKAQGAPEAZwBKAPEAIAZRAKEAKARXAMEAKAQGAC4ACwDXAC4AEwDg
AC4AGwD/AC4AIwAIAS4AKwAxAS4AMwAxAS4AOwAxAS4AQwAIAS4ASwA3AS4AUwAxAS4AWwBOAUMA
YwCYAWkAcwD/AIkAcwD/AOMAawCYAQEBewCYARsAAwABAAcAAwAIAAUAAAAUBsAAAAAeA8QAAAAY
BMgAAADJAM0AAABjBdIAAQAGAAMAAQAHAAUAAgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEA
AAAAAAAAAAAAAAAAAQAAAAQAAAAAAAAAAAAAAF8APAAAAAAAEAAAAAAAAAAAAAAAaACfBQAAAAAQ
AAAAAAAAAAAAAABoALwFAAAAAAQAAAAAAAAAAAAAAF8AQgMAAAAAAAAAAAEAAAB5BAAAAAAAAABT
Q19iN2Q5NTlhYzdiN2Q0YzVjODhkYzFmZTBhNGU1NjI3MQBJbnQzMgA8TW9kdWxlPgBJbnB1dElE
AG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhl
Y3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTQ19iN2Q5NTlhYzdiN2Q0YzVjODhkYzFmZTBhNGU1NjI3MS5kbGwAc2V0X2Nh
dGVnb3J5a2V5X0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0
dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5E
aWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJj
ZXMAU0NfYjdkOTU5YWM3YjdkNGM1Yzg4ZGMxZmUwYTRlNTYyNzEuUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2I3ZDk1OWFjN2I3ZDRjNWM4OGRjMWZlMGE0
ZTU2MjcxLlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1u
SW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQ29uY2F0AE9iamVjdABFbmRPZlJv
d3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21w
b25lbnQAY291bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRS
b3cATmV4dFJvdwBzZXRfY2F0ZWdvcnlrZXkAZ2V0X0Fzc2VtYmx5AAAAAAADQwAAgJtJAHMATgB1
AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8A
IABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABl
ACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8A
YgA3AGQAOQA1ADkAYQBjADcAYgA3AGQANABjADUAYwA4ADgAZABjADEAZgBlADAAYQA0AGUANQA2
ADIANwAxAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAACNgnwc/5Eq
QrI+DBCAPMMkAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZAwcBDgMgAA4FAAIODg4JIAMBEj0d
CBJBBSACAQgcAyAAAgYgAgIOEXUFIAEdCAgGAAESeRF9BSAAEoCBByACAQ4SgIEIt3pcVhk04IkI
iYRdzYCAzJECBggDBhIUAwYSGAMGEkUDBhJRAwYSVQMGEiAFIAEBEgwEIAEBAgkgBAEIDhI9EkEF
IAEBEkUEAAASUQQAABJVBQABARJVBAAAEiADAAABAygADgMoAAIECAASUQQIABJVBAgAEiAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDX2I3ZDk1
OWFjN2I3ZDRjNWM4OGRjMWZlMGE0ZTU2MjcxAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjMA
AEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUS
Lk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAPDEAAAAAAAAAAAAAVjEAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgxAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5k
bGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AYgA3AGQAOQA1ADkAYQBjADcAYgA3AGQANABjADUAYwA4ADgAZABjADEAZgBlADAA
YQA0AGUANQA2ADIANwAxAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBiADcAZAA5ADUA
OQBhAGMANwBiADcAZAA0AGMANQBjADgAOABkAGMAMQBmAGUAMABhADQAZQA1ADYAMgA3ADEALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGIA
NwBkADkANQA5AGEAYwA3AGIANwBkADQAYwA1AGMAOAA4AGQAYwAxAGYAZQAwAGEANABlADUANgAy
ADcAMQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBiADcA
ZAA5ADUAOQBhAGMANwBiADcAZAA0AGMANQBjADgAOABkAGMAMQBmAGUAMABhADQAZQA1ADYAMgA3
ADEAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGgxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_b7d959ac7b7d4c5c88dc1fe0a4e56271</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">BE</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Category\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Category\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DIM_Category\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Category\Script Component.Outputs[Output 0].Columns[category_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DIM_Category\Script Component.Outputs[Output 0].Columns[category_key]"
                      name="category_key" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DIM_Category.Paths[Aggregate Output 1]"
              endId="Package\DIM_Category\Script Component.Inputs[Input 0]"
              name="Aggregate Output 1"
              startId="Package\DIM_Category\Aggregate.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\DIM_Category.Paths[Excel Source Output]"
              endId="Package\DIM_Category\Aggregate.Inputs[Aggregate Input 1]"
              name="Excel Source Output"
              startId="Package\DIM_Category\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\DIM_Category.Paths[Output 0]"
              endId="Package\DIM_Category\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\DIM_Category\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DIM_Invoice"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{88E238A8-1F88-4B89-AC0B-3D9A425DCF2B}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DIM_Invoice"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DIM_Invoice\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Invoice\Aggregate.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Invoice\Aggregate.Inputs[Aggregate Input 1].Columns[invoice_and_item_number]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="invoice_and_item_number"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]" />
                    <inputColumn
                      refId="Package\DIM_Invoice\Aggregate.Inputs[Aggregate Input 1].Columns[sale_dollars]"
                      cachedDataType="r8"
                      cachedName="sale_dollars"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]" />
                    <inputColumn
                      refId="Package\DIM_Invoice\Aggregate.Inputs[Aggregate Input 1].Columns[bottles_sold]"
                      cachedDataType="r8"
                      cachedName="bottles_sold"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]" />
                    <inputColumn
                      refId="Package\DIM_Invoice\Aggregate.Inputs[Aggregate Input 1].Columns[volume_sold_liters]"
                      cachedDataType="r8"
                      cachedName="volume_sold_liters"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]" />
                    <inputColumn
                      refId="Package\DIM_Invoice\Aggregate.Inputs[Aggregate Input 1].Columns[volume_sold_gallons]"
                      cachedDataType="r8"
                      cachedName="volume_sold_gallons"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[invoice_and_item_number]"
                      name="invoice_and_item_number">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[sale_dollars]"
                      dataType="r8"
                      lineageId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[sale_dollars]"
                      name="sale_dollars">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[bottles_sold]"
                      dataType="r8"
                      lineageId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[bottles_sold]"
                      name="bottles_sold">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[volume_sold_liters]"
                      dataType="r8"
                      lineageId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[volume_sold_liters]"
                      name="volume_sold_liters">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[volume_sold_gallons]"
                      dataType="r8"
                      lineageId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[volume_sold_gallons]"
                      name="volume_sold_gallons">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Invoice\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Invoice\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[invoice_and_item_number]"
                      length="255"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]"
                      name="invoice_and_item_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottles_sold]"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]"
                      name="bottles_sold"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[sale_dollars]"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]"
                      name="sale_dollars"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_liters]"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]"
                      name="volume_sold_liters"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_gallons]"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]"
                      name="volume_sold_gallons"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      name="invoice_and_item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[date]"
                      dataType="date"
                      name="date" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_number]"
                      dataType="r8"
                      name="store_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_name]"
                      dataType="wstr"
                      length="255"
                      name="store_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[address]"
                      dataType="wstr"
                      length="255"
                      name="address" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="255"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[zip_code]"
                      dataType="r8"
                      name="zip_code" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_location]"
                      dataType="wstr"
                      length="255"
                      name="store_location" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[county_number]"
                      dataType="r8"
                      name="county_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[county]"
                      dataType="wstr"
                      length="255"
                      name="county" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[category]"
                      dataType="r8"
                      name="category" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[category_name]"
                      dataType="wstr"
                      length="255"
                      name="category_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_number]"
                      dataType="r8"
                      name="vendor_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      name="vendor_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_number]"
                      dataType="r8"
                      name="item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_description]"
                      dataType="wstr"
                      length="255"
                      name="item_description" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[pack]"
                      dataType="r8"
                      name="pack" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottle_volume_ml]"
                      dataType="r8"
                      name="bottle_volume_ml" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_cost]"
                      dataType="r8"
                      name="state_bottle_cost" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_retail]"
                      dataType="r8"
                      name="state_bottle_retail" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottles_sold]"
                      dataType="r8"
                      name="bottles_sold" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[sale_dollars]"
                      dataType="r8"
                      name="sale_dollars" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_liters]"
                      dataType="r8"
                      name="volume_sold_liters" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_gallons]"
                      dataType="r8"
                      name="volume_sold_gallons" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[invoice_and_item_number]"
                      name="invoice_and_item_number" />
                    <outputColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[bottles_sold]"
                      dataType="r8"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[bottles_sold]"
                      name="bottles_sold" />
                    <outputColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[sale_dollars]"
                      dataType="r8"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[sale_dollars]"
                      name="sale_dollars" />
                    <outputColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_liters]"
                      dataType="r8"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_liters]"
                      name="volume_sold_liters" />
                    <outputColumn
                      refId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_gallons]"
                      dataType="r8"
                      lineageId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_gallons]"
                      name="volume_sold_gallons" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Invoice\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DIM_Invoice]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Invoice\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[invoice_and_item_number]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="invoice_and_item_number"
                      externalMetadataColumnId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[invoice_and_item_number]"
                      lineageId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[invoice_and_item_number]" />
                    <inputColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[sale_dollars]"
                      cachedDataType="r8"
                      cachedName="sale_dollars"
                      externalMetadataColumnId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sale_dollars]"
                      lineageId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[sale_dollars]" />
                    <inputColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[bottles_sold]"
                      cachedDataType="r8"
                      cachedName="bottles_sold"
                      externalMetadataColumnId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[bottles_sold]"
                      lineageId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[bottles_sold]" />
                    <inputColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[volume_sold_liters]"
                      cachedDataType="r8"
                      cachedName="volume_sold_liters"
                      externalMetadataColumnId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[volume_sold_liters]"
                      lineageId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[volume_sold_liters]" />
                    <inputColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[volume_sold_gallons]"
                      cachedDataType="r8"
                      cachedName="volume_sold_gallons"
                      externalMetadataColumnId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[volume_sold_gallons]"
                      lineageId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1].Columns[volume_sold_gallons]" />
                    <inputColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[invoice_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="invoice_key"
                      externalMetadataColumnId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[invoice_key]"
                      lineageId="Package\DIM_Invoice\Script Component.Outputs[Output 0].Columns[invoice_key]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      name="invoice_and_item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[sale_dollars]"
                      dataType="r8"
                      name="sale_dollars" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[bottles_sold]"
                      dataType="r8"
                      name="bottles_sold" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[volume_sold_liters]"
                      dataType="r8"
                      name="volume_sold_liters" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[volume_sold_gallons]"
                      dataType="r8"
                      name="volume_sold_gallons" />
                    <externalMetadataColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[invoice_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="invoice_key" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Invoice\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Invoice\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Invoice\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Invoice\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Invoice\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }
    int count;
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        count++;
        string key = "invoice" + count.ToString();
        Row.invoicekey = key;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String invoicekey
    {
        set
        {
            this[0] = value;
        }
    }
    public bool invoicekey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f74dd79757dc4f69bdc2dc43268f7990.Properties.Settings.get_Default():SC_f74dd79757dc4f69bdc2dc43268f7990.Properties.Sett" +
    "ings")]

namespace SC_f74dd79757dc4f69bdc2dc43268f7990.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f74dd79757dc4f69bdc2dc43268f7990.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f74dd79757dc4f69bdc2dc43268f7990.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f74dd79757dc4f69bdc2dc43268f7990.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f74dd79757dc4f69bdc2dc43268f7990.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f74dd79757dc4f69bdc2dc43268f7990.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_f74dd79757dc4f69bdc2dc43268f7990</msb:CodeName>
    <msb:DisplayName>SC_f74dd79757dc4f69bdc2dc43268f7990</msb:DisplayName>
    <msb:ProjectId>{A18910F4-235E-46D4-B4DF-B8D9B0378979}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f74dd79757dc4f69bdc2dc43268f7990.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f74dd79757dc4f69bdc2dc43268f7990")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f74dd79757dc4f69bdc2dc43268f7990")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f74dd79757dc4f69bdc2dc43268f7990.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3b8f3ba1-f746-406c-b6ba-4eb5fc1f31a5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f74dd79757dc4f69bdc2dc43268f7990</RootNamespace>
    <AssemblyName>SC_f74dd79757dc4f69bdc2dc43268f7990</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_f74dd79757dc4f69bdc2dc43268f7990" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f74dd79757dc4f69bdc2dc43268f7990.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEvpimUAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAcjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACAxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAeBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABU
MQAAAAAAAEgAAAACAAUAtCEAALQOAAABAAAAAAAAAGgwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMALAAAAAEAABECAnsBAAAE
F1h9AQAABHIBAABwAnwBAAAEKBIAAAooEwAACgoDBm8GAAAGKh4CKAoAAAYqKgIDBAUoFAAACiom
AhYDKBUAAAoqWgMsCAIWKBYAAAoqchEAAHBzFwAACnoeAigYAAAKKh4CKBkAAAoqfgIoGgAACgIC
cw4AAAZ9AgAABAICcw8AAAZ9AwAABCqSBHKuAABwGm8bAAAKLBUCBQIDKBwAAAoOBHMFAAAGbwwA
AAYqSisHAgNvDQAABgNvCAAABi3xKgYqOgIoHQAACgIDfQQAAAQqOgIoHQAACgIDfQUAAAQqHgIo
HQAACiqufgYAAAQtHnK+AABw0AcAAAIoHgAACm8fAAAKcyAAAAqABgAABH4GAAAEKhp+BwAABCoe
AoAHAAAEKhp+CAAABCoeAighAAAKKi5zFQAABoAIAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAOAUAACN+AACkBQAALAYAACNTdHJpbmdzAAAAANALAAAwAQAAI1VTAAAN
AAAQAAAAI0dVSUQAAAAQDQAApAEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAA
ACAAAAAIAAAACAAAABYAAAAPAAAAIQAAABAAAAABAAAAAwAAAAUAAAAGAAAAAQAAAAQAAAABAAAA
AADyAgEAAAAAAAYA6gFHBAYAfgJHBAYANgE0BA8AuwQAAAYAYwGJAwYAzQGJAwYArgGJAwYAZQKJ
AwYACgKJAwYAIwKJAwYAegGJAwYAlQG5AgoAPgKDAAoABgSDAA4A9wODAAoA0gODAAoAiAWDAAYA
SwVBAwYAGQE0BAYAFwRnBAYAxgN0AxIA6QDcAhIASgHcAhIA0QBfAwYA/gBHBAYAJQBBAwYA1QJB
AwYAmwNBAwYAtQNBAwYApABBAwYAVQBBAwYAIgaJAwAAAAArAAAAAAABAAEAAQAQAFQDAAAQAAEA
AQABABAA6gMAADkAAgAFAAEAEABqBQAARQACAAoAAQAQADgFAABJAAQADgABABAA+QQAAEkABQAP
AAAAEABuBMoESQAGABAAAAEQACgFygRhAAgAFAABAJgFcQAGADgFdAAGAPkEeAABAHgFfAABAHgF
fAARAEgDgAARAMEAhAARAEUAiABQIAAAAADGAJwCBgABAFggAAAAAMYApwIGAAEAYCAAAAAAxgDw
BYwAAQCYIAAAAACGGCcEBgACAKAgAAAAAIYYJwQpAAIAqyAAAAAAhggPBhAABQC1IAAAAACGCBoD
kgAGAMwgAAAAAIYABwY5AAcA1CAAAAAAhgBSBTkABwDcIAAAAACGGCcEBgAHAPwgAAAAAMYA4wWX
AAcAISEAAAAAxgHcBYwACwA0IQAAAADGAfAFjAAMADYhAAAAAIYYJwShAA0ARSEAAAAAhhgnBKEA
DgBUIQAAAACDGCcEBgAPAFwhAAAAAJMIEwSnAA8AiCEAAAAAkwipAKwADwCPIQAAAACTCLUAsQAP
AJchAAAAAJYIXgW3ABAAniEAAAAAhhgnBAYAEACmIQAAAACRGC0EvAAQAAAAAQALBgAAAQAMBAAA
AgADBQAAAwDgAwAAAQCzAgAAAQCzAgAAAQA0AAAAAgB5AAAAAwAMBAAABADgAwAAAQAMBAAAAQAL
BgAAAQCOBQAAAQCOBQAAAQCzAgkAJwQBABEAJwQGABkAJwQKACkAJwQQADEAJwQQADkAJwQQAEEA
JwQQAEkAJwQQAFEAJwQQAFkAJwQQAGEAJwQQAGkAJwQGAJkAJwQGALkAJwQVAMkAJwQGAIkAnAIG
AIkApwIGANEA0wIfANkARAUjAHEAJwQpAHEAOAMzAHEAMAMBAOEAJwQQAHEABwY5AHEAUgU5AIkA
JwQGANkAMQU9AIkAFwVEAJEAJwQGAPEAZwBKAPEAHgZRAKEAJwRXAMEAJwQGAC4ACwDXAC4AEwDg
AC4AGwD/AC4AIwAIAS4AKwAxAS4AMwAxAS4AOwAxAS4AQwAIAS4ASwA3AS4AUwAxAS4AWwBOAUMA
YwCcAWkAcwD/AIkAcwD/AOMAawCcAQEBewCcARsAAwABAAcAAwAIAAUAAAATBsAAAAAeA8QAAAAX
BMgAAADJAM0AAABiBdIAAQAGAAMAAQAHAAUAAgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEA
AAAAAAAAAAAAAAAAAQAAAAQAAAAAAAAAAAAAAF8APAAAAAAAEAAAAAAAAAAAAAAAaACeBQAAAAAQ
AAAAAAAAAAAAAABoALsFAAAAAAQAAAAAAAAAAAAAAF8AQQMAAAAAAAAAAAEAAAB4BAAAAAAAAABT
Q19mNzRkZDc5NzU3ZGM0ZjY5YmRjMmRjNDMyNjhmNzk5MABJbnQzMgA8TW9kdWxlPgBJbnB1dElE
AG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhl
Y3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTQ19mNzRkZDc5NzU3ZGM0ZjY5YmRjMmRjNDMyNjhmNzk5MC5kbGwAc2V0X2lu
dm9pY2VrZXlfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlw
dE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1
cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZl
cgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNl
cwBTQ19mNzRkZDc5NzU3ZGM0ZjY5YmRjMmRjNDMyNjhmNzk5MC5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZjc0ZGQ3OTc1N2RjNGY2OWJkYzJkYzQzMjY4
Zjc5OTAuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5J
bmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBDb25jYXQAT2JqZWN0AEVuZE9mUm93
c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBv
bmVudABjb3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJv
dwBOZXh0Um93AHNldF9pbnZvaWNla2V5AGdldF9Bc3NlbWJseQAAAA9pAG4AdgBvAGkAYwBlAACA
m0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUA
dAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABv
ACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAA
AHFTAEMAXwBmADcANABkAGQANwA5ADcANQA3AGQAYwA0AGYANgA5AGIAZABjADIAZABjADQAMwAy
ADYAOABmADcAOQA5ADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMA
AGJZ2NPjKbBHt5EXzlVgtqgABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkDBwEOAyAADgUAAg4O
DgkgAwESPR0IEkEFIAIBCBwDIAACBiACAg4RdQUgAR0ICAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3
elxWGTTgiQiJhF3NgIDMkQIGCAMGEhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAQgAQECCSAE
AQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAOAygAAgQIABJRBAgAElUE
CAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U0NfZjc0ZGQ3OTc1N2RjNGY2OWJkYzJkYzQzMjY4Zjc5OTAAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyMwAATQEAHC5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43LjIBAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lFC5ORVQgRnJhbWV3b3JrIDQuNy4yBAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAASDEAAAAA
AAAAAAAAYjEAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFQxAAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AZgA3ADQAZABkADcAOQA3ADUANwBkAGMANABmADYAOQBiAGQAYwAyAGQAYwA0ADMA
MgA2ADgAZgA3ADkAOQAwAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmADcANABkAGQA
NwA5ADcANQA3AGQAYwA0AGYANgA5AGIAZABjADIAZABjADQAMwAyADYAOABmADcAOQA5ADAALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGYA
NwA0AGQAZAA3ADkANwA1ADcAZABjADQAZgA2ADkAYgBkAGMAMgBkAGMANAAzADIANgA4AGYANwA5
ADkAMAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmADcA
NABkAGQANwA5ADcANQA3AGQAYwA0AGYANgA5AGIAZABjADIAZABjADQAMwAyADYAOABmADcAOQA5
ADAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHQxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_f74dd79757dc4f69bdc2dc43268f7990</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">4D</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Invoice\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Invoice\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DIM_Invoice\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Invoice\Script Component.Outputs[Output 0].Columns[invoice_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DIM_Invoice\Script Component.Outputs[Output 0].Columns[invoice_key]"
                      name="invoice_key" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DIM_Invoice.Paths[Aggregate Output 1]"
              endId="Package\DIM_Invoice\Script Component.Inputs[Input 0]"
              name="Aggregate Output 1"
              startId="Package\DIM_Invoice\Aggregate.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\DIM_Invoice.Paths[Excel Source Output]"
              endId="Package\DIM_Invoice\Aggregate.Inputs[Aggregate Input 1]"
              name="Excel Source Output"
              startId="Package\DIM_Invoice\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\DIM_Invoice.Paths[Output 0]"
              endId="Package\DIM_Invoice\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\DIM_Invoice\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DIM_Item"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{BD0204C5-752E-4EE2-8EEA-E09D2C68A04E}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DIM_Item"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DIM_Item\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Item\Aggregate.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Item\Aggregate.Inputs[Aggregate Input 1].Columns[item_number]"
                      cachedDataType="r8"
                      cachedName="item_number"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[item_number]" />
                    <inputColumn
                      refId="Package\DIM_Item\Aggregate.Inputs[Aggregate Input 1].Columns[item_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="item_description"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[item_description]" />
                    <inputColumn
                      refId="Package\DIM_Item\Aggregate.Inputs[Aggregate Input 1].Columns[bottle_volume_ml]"
                      cachedDataType="r8"
                      cachedName="bottle_volume_ml"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]" />
                    <inputColumn
                      refId="Package\DIM_Item\Aggregate.Inputs[Aggregate Input 1].Columns[state_bottle_cost]"
                      cachedDataType="r8"
                      cachedName="state_bottle_cost"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]" />
                    <inputColumn
                      refId="Package\DIM_Item\Aggregate.Inputs[Aggregate Input 1].Columns[state_bottle_retail]"
                      cachedDataType="r8"
                      cachedName="state_bottle_retail"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[item_number]"
                      dataType="r8"
                      lineageId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[item_number]"
                      name="item_number">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[item_number]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[item_description]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[item_description]"
                      name="item_description">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[item_description]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[bottle_volume_ml]"
                      dataType="r8"
                      lineageId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[bottle_volume_ml]"
                      name="bottle_volume_ml">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[state_bottle_cost]"
                      dataType="r8"
                      lineageId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[state_bottle_cost]"
                      name="state_bottle_cost">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[state_bottle_retail]"
                      dataType="r8"
                      lineageId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[state_bottle_retail]"
                      name="state_bottle_retail">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Item\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Item\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[item_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_number]"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[item_number]"
                      name="item_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[item_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_description]"
                      length="255"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[item_description]"
                      name="item_description"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottle_volume_ml]"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]"
                      name="bottle_volume_ml"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_cost]"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]"
                      name="state_bottle_cost"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_retail]"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]"
                      name="state_bottle_retail"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      name="invoice_and_item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[date]"
                      dataType="date"
                      name="date" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_number]"
                      dataType="r8"
                      name="store_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_name]"
                      dataType="wstr"
                      length="255"
                      name="store_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[address]"
                      dataType="wstr"
                      length="255"
                      name="address" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="255"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[zip_code]"
                      dataType="r8"
                      name="zip_code" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_location]"
                      dataType="wstr"
                      length="255"
                      name="store_location" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[county_number]"
                      dataType="r8"
                      name="county_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[county]"
                      dataType="wstr"
                      length="255"
                      name="county" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[category]"
                      dataType="r8"
                      name="category" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[category_name]"
                      dataType="wstr"
                      length="255"
                      name="category_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_number]"
                      dataType="r8"
                      name="vendor_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      name="vendor_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_number]"
                      dataType="r8"
                      name="item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_description]"
                      dataType="wstr"
                      length="255"
                      name="item_description" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[pack]"
                      dataType="r8"
                      name="pack" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottle_volume_ml]"
                      dataType="r8"
                      name="bottle_volume_ml" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_cost]"
                      dataType="r8"
                      name="state_bottle_cost" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_retail]"
                      dataType="r8"
                      name="state_bottle_retail" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottles_sold]"
                      dataType="r8"
                      name="bottles_sold" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[sale_dollars]"
                      dataType="r8"
                      name="sale_dollars" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_liters]"
                      dataType="r8"
                      name="volume_sold_liters" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_gallons]"
                      dataType="r8"
                      name="volume_sold_gallons" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[item_number]"
                      dataType="r8"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[item_number]"
                      name="item_number" />
                    <outputColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[item_description]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[item_description]"
                      name="item_description" />
                    <outputColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[bottle_volume_ml]"
                      dataType="r8"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[bottle_volume_ml]"
                      name="bottle_volume_ml" />
                    <outputColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_cost]"
                      dataType="r8"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_cost]"
                      name="state_bottle_cost" />
                    <outputColumn
                      refId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_retail]"
                      dataType="r8"
                      lineageId="Package\DIM_Item\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_retail]"
                      name="state_bottle_retail" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Item\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DIM_Item]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Item\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[item_number]"
                      cachedDataType="r8"
                      cachedName="item_number"
                      externalMetadataColumnId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[item_number]"
                      lineageId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[item_number]" />
                    <inputColumn
                      refId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[item_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="item_description"
                      externalMetadataColumnId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[item_description]"
                      lineageId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[item_description]" />
                    <inputColumn
                      refId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[bottle_volume_ml]"
                      cachedDataType="r8"
                      cachedName="bottle_volume_ml"
                      externalMetadataColumnId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[bottle_volume_ml]"
                      lineageId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[bottle_volume_ml]" />
                    <inputColumn
                      refId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[state_bottle_cost]"
                      cachedDataType="r8"
                      cachedName="state_bottle_cost"
                      externalMetadataColumnId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[state_bottle_cost]"
                      lineageId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[state_bottle_cost]" />
                    <inputColumn
                      refId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[state_bottle_retail]"
                      cachedDataType="r8"
                      cachedName="state_bottle_retail"
                      externalMetadataColumnId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[state_bottle_retail]"
                      lineageId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1].Columns[state_bottle_retail]" />
                    <inputColumn
                      refId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[item_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="item_key"
                      externalMetadataColumnId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[item_key]"
                      lineageId="Package\DIM_Item\Script Component.Outputs[Output 0].Columns[item_key]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[item_number]"
                      dataType="r8"
                      name="item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[item_description]"
                      dataType="wstr"
                      length="255"
                      name="item_description" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[bottle_volume_ml]"
                      dataType="r8"
                      name="bottle_volume_ml" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[state_bottle_cost]"
                      dataType="r8"
                      name="state_bottle_cost" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[state_bottle_retail]"
                      dataType="r8"
                      name="state_bottle_retail" />
                    <externalMetadataColumn
                      refId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[item_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="item_key" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Item\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Item\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Item\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Item\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Item\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Item\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }
    int count;

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        count++;
        string key = "IT"+count.ToString();
        Row.itemkey = key;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String itemkey
    {
        set
        {
            this[0] = value;
        }
    }
    public bool itemkey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2c5f688f36144669aba73265720337d9.Properties.Settings.get_Default():SC_2c5f688f36144669aba73265720337d9.Properties.Sett" +
    "ings")]

namespace SC_2c5f688f36144669aba73265720337d9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_2c5f688f36144669aba73265720337d9</msb:CodeName>
    <msb:DisplayName>SC_2c5f688f36144669aba73265720337d9</msb:DisplayName>
    <msb:ProjectId>{27B59B63-1670-4EBA-87DE-429AEE5D002D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_2c5f688f36144669aba73265720337d9.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2c5f688f36144669aba73265720337d9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_2c5f688f36144669aba73265720337d9")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_2c5f688f36144669aba73265720337d9.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a7cf6cff-5b77-417d-b327-5ed14b4ad1fb}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_2c5f688f36144669aba73265720337d9</RootNamespace>
    <AssemblyName>SC_2c5f688f36144669aba73265720337d9</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_2c5f688f36144669aba73265720337d9" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2c5f688f36144669aba73265720337d9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2c5f688f36144669aba73265720337d9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2c5f688f36144669aba73265720337d9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2c5f688f36144669aba73265720337d9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2c5f688f36144669aba73265720337d9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_2c5f688f36144669aba73265720337d9.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEvtimUAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAZjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABQxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAbBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABI
MQAAAAAAAEgAAAACAAUAtCEAAKgOAAABAAAAAAAAAFwwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMALAAAAAEAABECAnsBAAAE
F1h9AQAABHIBAABwAnwBAAAEKBIAAAooEwAACgoDBm8GAAAGKh4CKAoAAAYqKgIDBAUoFAAACiom
AhYDKBUAAAoqWgMsCAIWKBYAAAoqcgcAAHBzFwAACnoeAigYAAAKKh4CKBkAAAoqfgIoGgAACgIC
cw4AAAZ9AgAABAICcw8AAAZ9AwAABCqSBHKkAABwGm8bAAAKLBUCBQIDKBwAAAoOBHMFAAAGbwwA
AAYqSisHAgNvDQAABgNvCAAABi3xKgYqOgIoHQAACgIDfQQAAAQqOgIoHQAACgIDfQUAAAQqHgIo
HQAACiqufgYAAAQtHnK0AABw0AcAAAIoHgAACm8fAAAKcyAAAAqABgAABH4GAAAEKhp+BwAABCoe
AoAHAAAEKhp+CAAABCoeAighAAAKKi5zFQAABoAIAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAOAUAACN+AACkBQAAKAYAACNTdHJpbmdzAAAAAMwLAAAoAQAAI1VTAPQM
AAAQAAAAI0dVSUQAAAAEDQAApAEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAA
ACAAAAAIAAAACAAAABYAAAAPAAAAIQAAABAAAAABAAAAAwAAAAUAAAAGAAAAAQAAAAQAAAABAAAA
AADyAgEAAAAAAAYA6gFEBAYAfgJEBAYANgExBA8AuAQAAAYAYwGGAwYAzQGGAwYArgGGAwYAZQKG
AwYACgKGAwYAIwKGAwYAegGGAwYAlQG5AgoAPgKDAAoAAwSDAA4A9AODAAoAzwODAAoAhQWDAAYA
SAU+AwYAGQExBAYAFARkBAYAwwNxAxIA6QDcAhIASgHcAhIA0QBcAwYA/gBEBAYAAQA+AwYA1QI+
AwYAmAM+AwYAsgM+AwYApAA+AwYAVQA+AwYAHAaGAwAAAAArAAAAAAABAAEAAQAQAFEDAAAQAAEA
AQABABAA5wMAADkAAgAFAAEAEABnBQAARQACAAoAAQAQADUFAABJAAQADgABABAA9gQAAEkABQAP
AAAAEABrBMcESQAGABAAAAEQACUFxwRhAAgAFAABAJUFcQAGADUFdAAGAPYEeAABAHUFfAABAHUF
fAARAEUDgAARAMEAhAARAEUAiABQIAAAAADGAJwCBgABAFggAAAAAMYApwIGAAEAYCAAAAAAxgDt
BYwAAQCYIAAAAACGGCQEBgACAKAgAAAAAIYYJAQpAAIAqyAAAAAAhggMBhAABQC1IAAAAACGCBoD
kgAGAMwgAAAAAIYABAY5AAcA1CAAAAAAhgBPBTkABwDcIAAAAACGGCQEBgAHAPwgAAAAAMYA4AWX
AAcAISEAAAAAxgHZBYwACwA0IQAAAADGAe0FjAAMADYhAAAAAIYYJAShAA0ARSEAAAAAhhgkBKEA
DgBUIQAAAACDGCQEBgAPAFwhAAAAAJMIEASnAA8AiCEAAAAAkwipAKwADwCPIQAAAACTCLUAsQAP
AJchAAAAAJYIWwW3ABAAniEAAAAAhhgkBAYAEACmIQAAAACRGCoEvAAQAAAAAQAIBgAAAQAJBAAA
AgAABQAAAwDdAwAAAQCzAgAAAQCzAgAAAQA0AAAAAgB5AAAAAwAJBAAABADdAwAAAQAJBAAAAQAI
BgAAAQCLBQAAAQCLBQAAAQCzAgkAJAQBABEAJAQGABkAJAQKACkAJAQQADEAJAQQADkAJAQQAEEA
JAQQAEkAJAQQAFEAJAQQAFkAJAQQAGEAJAQQAGkAJAQGAJkAJAQGALkAJAQVAMkAJAQGAIkAnAIG
AIkApwIGANEA0wIfANkAQQUjAHEAJAQpAHEANQMzAHEALQMBAOEAJAQQAHEABAY5AHEATwU5AIkA
JAQGANkALgU9AIkAFAVEAJEAJAQGAPEAZwBKAPEAGAZRAKEAJARXAMEAJAQGAC4ACwDXAC4AEwDg
AC4AGwD/AC4AIwAIAS4AKwAxAS4AMwAxAS4AOwAxAS4AQwAIAS4ASwA3AS4AUwAxAS4AWwBOAUMA
YwCcAWkAcwD/AIkAcwD/AOMAawCcAQEBewCcARsAAwABAAcAAwAIAAUAAAAQBsAAAAAeA8QAAAAU
BMgAAADJAM0AAABfBdIAAQAGAAMAAQAHAAUAAgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEA
AAAAAAAAAAAAAAAABwAAAAQAAAAAAAAAAAAAAF8APAAAAAAAEAAAAAAAAAAAAAAAaACbBQAAAAAQ
AAAAAAAAAAAAAABoALgFAAAAAAQAAAAAAAAAAAAAAF8APgMAAAAAAAAAAAEAAAB1BAAAAAAAAABJ
bnQzMgBTQ18yYzVmNjg4ZjM2MTQ0NjY5YWJhNzMyNjU3MjAzMzdkOQA8TW9kdWxlPgBJbnB1dElE
AG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhl
Y3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTQ18yYzVmNjg4ZjM2MTQ0NjY5YWJhNzMyNjU3MjAzMzdkOS5kbGwAc2V0X2l0
ZW1rZXlfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1h
aW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxl
Y3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJ
bmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBT
Y3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdu
b3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
Q18yYzVmNjg4ZjM2MTQ0NjY5YWJhNzMyNjU3MjAzMzdkOS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfMmM1ZjY4OGYzNjE0NDY2OWFiYTczMjY1NzIwMzM3
ZDkuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRl
eGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBDb25jYXQAT2JqZWN0AEVuZE9mUm93c2V0
AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVu
dABjb3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
UGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBO
ZXh0Um93AHNldF9pdGVta2V5AGdldF9Bc3NlbWJseQAAAAAABUkAVAAAgJtJAHMATgB1AGwAbAAg
AHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEA
bABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBv
AGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8AMgBjADUA
ZgA2ADgAOABmADMANgAxADQANAA2ADYAOQBhAGIAYQA3ADMAMgA2ADUANwAyADAAMwAzADcAZAA5
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAGMx1313PIRKnSCT
OTGKiYMABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkDBwEOAyAADgUAAg4ODgkgAwESPR0IEkEF
IAIBCBwDIAACBiACAg4RdQUgAR0ICAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3elxWGTTgiQiJhF3N
gIDMkQIGCAMGEhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAQgAQECCSAEAQgOEj0SQQUgAQES
RQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAOAygAAgQIABJRBAgAElUECAASIAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMmM1ZjY4OGYz
NjE0NDY2OWFiYTczMjY1NzIwMzM3ZDkAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMwAATQEA
HC5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lFC5O
RVQgRnJhbWV3b3JrIDQuNy4yBAEAAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAPDEAAAAAAAAAAAAAVjEAAAAg
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEgxAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5k
bGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AMgBjADUAZgA2ADgAOABmADMANgAxADQANAA2ADYAOQBhAGIAYQA3ADMAMgA2ADUA
NwAyADAAMwAzADcAZAA5AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAyAGMANQBmADYA
OAA4AGYAMwA2ADEANAA0ADYANgA5AGEAYgBhADcAMwAyADYANQA3ADIAMAAzADMANwBkADkALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADIA
YwA1AGYANgA4ADgAZgAzADYAMQA0ADQANgA2ADkAYQBiAGEANwAzADIANgA1ADcAMgAwADMAMwA3
AGQAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAyAGMA
NQBmADYAOAA4AGYAMwA2ADEANAA0ADYANgA5AGEAYgBhADcAMwAyADYANQA3ADIAMAAzADMANwBk
ADkAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGgxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_2c5f688f36144669aba73265720337d9</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">0F</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Item\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Item\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DIM_Item\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Item\Script Component.Outputs[Output 0].Columns[item_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DIM_Item\Script Component.Outputs[Output 0].Columns[item_key]"
                      name="item_key" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DIM_Item.Paths[Aggregate Output 1]"
              endId="Package\DIM_Item\Script Component.Inputs[Input 0]"
              name="Aggregate Output 1"
              startId="Package\DIM_Item\Aggregate.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\DIM_Item.Paths[Excel Source Output]"
              endId="Package\DIM_Item\Aggregate.Inputs[Aggregate Input 1]"
              name="Excel Source Output"
              startId="Package\DIM_Item\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\DIM_Item.Paths[Output 0]"
              endId="Package\DIM_Item\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\DIM_Item\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DIM_Location"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{01E4C8D1-70D1-4EC3-B223-452610A81D01}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DIM_Location"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DIM_Location\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Location\Aggregate.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Location\Aggregate.Inputs[Aggregate Input 1].Columns[city]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="city"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[city]" />
                    <inputColumn
                      refId="Package\DIM_Location\Aggregate.Inputs[Aggregate Input 1].Columns[county]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="county"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[county]" />
                    <inputColumn
                      refId="Package\DIM_Location\Aggregate.Inputs[Aggregate Input 1].Columns[address]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="address"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[address]" />
                    <inputColumn
                      refId="Package\DIM_Location\Aggregate.Inputs[Aggregate Input 1].Columns[zip_code]"
                      cachedDataType="r8"
                      cachedName="zip_code"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[zip_code]" />
                    <inputColumn
                      refId="Package\DIM_Location\Aggregate.Inputs[Aggregate Input 1].Columns[county_number]"
                      cachedDataType="r8"
                      cachedName="county_number"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[county_number]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[city]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[city]"
                      name="city">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[city]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[county]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[county]"
                      name="county">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[county]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[address]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[address]"
                      name="address">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[address]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[zip_code]"
                      dataType="r8"
                      lineageId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[zip_code]"
                      name="zip_code">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[zip_code]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[county_number]"
                      dataType="r8"
                      lineageId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[county_number]"
                      name="county_number">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[county_number]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Location\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Location\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[county_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[county_number]"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[county_number]"
                      name="county_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[county]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[county]"
                      length="255"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[county]"
                      name="county"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[zip_code]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[zip_code]"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[zip_code]"
                      name="zip_code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[city]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[city]"
                      length="255"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[city]"
                      name="city"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[address]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[address]"
                      length="255"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].Columns[address]"
                      name="address"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      name="invoice_and_item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[date]"
                      dataType="date"
                      name="date" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_number]"
                      dataType="r8"
                      name="store_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_name]"
                      dataType="wstr"
                      length="255"
                      name="store_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[address]"
                      dataType="wstr"
                      length="255"
                      name="address" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="255"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[zip_code]"
                      dataType="r8"
                      name="zip_code" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_location]"
                      dataType="wstr"
                      length="255"
                      name="store_location" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[county_number]"
                      dataType="r8"
                      name="county_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[county]"
                      dataType="wstr"
                      length="255"
                      name="county" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[category]"
                      dataType="r8"
                      name="category" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[category_name]"
                      dataType="wstr"
                      length="255"
                      name="category_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_number]"
                      dataType="r8"
                      name="vendor_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      name="vendor_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_number]"
                      dataType="r8"
                      name="item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_description]"
                      dataType="wstr"
                      length="255"
                      name="item_description" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[pack]"
                      dataType="r8"
                      name="pack" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottle_volume_ml]"
                      dataType="r8"
                      name="bottle_volume_ml" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_cost]"
                      dataType="r8"
                      name="state_bottle_cost" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_retail]"
                      dataType="r8"
                      name="state_bottle_retail" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottles_sold]"
                      dataType="r8"
                      name="bottles_sold" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[sale_dollars]"
                      dataType="r8"
                      name="sale_dollars" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_liters]"
                      dataType="r8"
                      name="volume_sold_liters" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_gallons]"
                      dataType="r8"
                      name="volume_sold_gallons" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[county_number]"
                      dataType="r8"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[county_number]"
                      name="county_number" />
                    <outputColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[county]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[county]"
                      name="county" />
                    <outputColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[zip_code]"
                      dataType="r8"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[zip_code]"
                      name="zip_code" />
                    <outputColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[city]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[city]"
                      name="city" />
                    <outputColumn
                      refId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[address]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Location\Excel Source.Outputs[Excel Source Error Output].Columns[address]"
                      name="address" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Location\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DIM_Location]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Location\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[city]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="city"
                      externalMetadataColumnId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[city]"
                      lineageId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[city]" />
                    <inputColumn
                      refId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[county]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="county"
                      externalMetadataColumnId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[county]"
                      lineageId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[county]" />
                    <inputColumn
                      refId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[address]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="address"
                      externalMetadataColumnId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[address]"
                      lineageId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[address]" />
                    <inputColumn
                      refId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[zip_code]"
                      cachedDataType="r8"
                      cachedName="zip_code"
                      externalMetadataColumnId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[zip_code]"
                      lineageId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[zip_code]" />
                    <inputColumn
                      refId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[county_number]"
                      cachedDataType="r8"
                      cachedName="county_number"
                      externalMetadataColumnId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[county_number]"
                      lineageId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1].Columns[county_number]" />
                    <inputColumn
                      refId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[location_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="location_key"
                      externalMetadataColumnId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[location_key]"
                      lineageId="Package\DIM_Location\Script Component.Outputs[Output 0].Columns[location_key]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[city]"
                      dataType="wstr"
                      length="255"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[county]"
                      dataType="wstr"
                      length="255"
                      name="county" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[address]"
                      dataType="wstr"
                      length="255"
                      name="address" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[zip_code]"
                      dataType="r8"
                      name="zip_code" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[county_number]"
                      dataType="r8"
                      name="county_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[location_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="location_key" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Location\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Location\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Location\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Location\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Location\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Location\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }
    int count;
    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        count++;
        string key = "location" + count.ToString();
        Row.locationkey = key;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String locationkey
    {
        set
        {
            this[0] = value;
        }
    }
    public bool locationkey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f74dd79757dc4f69bdc2dc43268f7990.Properties.Settings.get_Default():SC_f74dd79757dc4f69bdc2dc43268f7990.Properties.Sett" +
    "ings")]

namespace SC_f74dd79757dc4f69bdc2dc43268f7990.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f74dd79757dc4f69bdc2dc43268f7990.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f74dd79757dc4f69bdc2dc43268f7990.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f74dd79757dc4f69bdc2dc43268f7990.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f74dd79757dc4f69bdc2dc43268f7990.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f74dd79757dc4f69bdc2dc43268f7990.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_f74dd79757dc4f69bdc2dc43268f7990</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_f74dd79757dc4f69bdc2dc43268f7990</msb:DisplayName>
    <msb:ProjectId>{77E576B2-F82D-4122-B46A-D62599976921}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f74dd79757dc4f69bdc2dc43268f7990.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f74dd79757dc4f69bdc2dc43268f7990")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f74dd79757dc4f69bdc2dc43268f7990")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f74dd79757dc4f69bdc2dc43268f7990.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3b8f3ba1-f746-406c-b6ba-4eb5fc1f31a5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f74dd79757dc4f69bdc2dc43268f7990</RootNamespace>
    <AssemblyName>SC_9568B2988F9540AE8B37D16F25DFA4EC</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_f74dd79757dc4f69bdc2dc43268f7990" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_9568B2988F9540AE8B37D16F25DFA4EC.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAA9CCGYAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAdjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACQxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAfBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABY
MQAAAAAAAEgAAAACAAUAtCEAALgOAAABAAAAAAAAAGwwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMALAAAAAEAABECAnsBAAAE
F1h9AQAABHIBAABwAnwBAAAEKBIAAAooEwAACgoDBm8GAAAGKh4CKAoAAAYqKgIDBAUoFAAACiom
AhYDKBUAAAoqWgMsCAIWKBYAAAoqchMAAHBzFwAACnoeAigYAAAKKh4CKBkAAAoqfgIoGgAACgIC
cw4AAAZ9AgAABAICcw8AAAZ9AwAABCqSBHKwAABwGm8bAAAKLBUCBQIDKBwAAAoOBHMFAAAGbwwA
AAYqSisHAgNvDQAABgNvCAAABi3xKgYqOgIoHQAACgIDfQQAAAQqOgIoHQAACgIDfQUAAAQqHgIo
HQAACiqufgYAAAQtHnLAAABw0AcAAAIoHgAACm8fAAAKcyAAAAqABgAABH4GAAAEKhp+BwAABCoe
AoAHAAAEKhp+CAAABCoeAighAAAKKi5zFQAABoAIAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAOAUAACN+AACkBQAAMAYAACNTdHJpbmdzAAAAANQLAAA0AQAAI1VTAAgN
AAAQAAAAI0dVSUQAAAAYDQAAoAEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAA
ACAAAAAIAAAACAAAABYAAAAPAAAAIQAAABAAAAABAAAAAwAAAAUAAAAGAAAAAQAAAAQAAAABAAAA
AADyAgEAAAAAAAYA6gFIBAYAfgJIBAYANgE1BA8AvAQAAAYAYwGKAwYAzQGKAwYArgGKAwYAZQKK
AwYACgKKAwYAIwKKAwYAegGKAwYAlQG5AgoAPgKDAAoABwSDAA4A+AODAAoA0wODAAoAiQWDAAYA
TAVCAwYAGQE1BAYAGARoBAYAxwN1AxIA6QDcAhIASgHcAhIA0QBgAwYA/gBIBAYAAQBCAwYA1QJC
AwYAnANCAwYAtgNCAwYApABCAwYAVQBCAwYAJAaKAwAAAAAHAAAAAAABAAEAAQAQAFUDAAAQAAEA
AQABABAA6wMAADkAAgAFAAEAEABrBQAARQACAAoAAQAQADkFAABJAAQADgABABAA+gQAAEkABQAP
AAAAEABvBMsESQAGABAAAAEQACkFywRhAAgAFAABAJkFcQAGADkFdAAGAPoEeAABAHkFfAABAHkF
fAARAEkDgAARAMEAhAARAEUAiABQIAAAAADGAJwCBgABAFggAAAAAMYApwIGAAEAYCAAAAAAxgDx
BYwAAQCYIAAAAACGGCgEBgACAKAgAAAAAIYYKAQpAAIAqyAAAAAAhggQBhAABQC1IAAAAACGCBoD
kgAGAMwgAAAAAIYACAY5AAcA1CAAAAAAhgBTBTkABwDcIAAAAACGGCgEBgAHAPwgAAAAAMYA5AWX
AAcAISEAAAAAxgHdBYwACwA0IQAAAADGAfEFjAAMADYhAAAAAIYYKAShAA0ARSEAAAAAhhgoBKEA
DgBUIQAAAACDGCgEBgAPAFwhAAAAAJMIFASnAA8AiCEAAAAAkwipAKwADwCPIQAAAACTCLUAsQAP
AJchAAAAAJYIXwW3ABAAniEAAAAAhhgoBAYAEACmIQAAAACRGC4EvAAQAAAAAQAMBgAAAQANBAAA
AgAEBQAAAwDhAwAAAQCzAgAAAQCzAgAAAQA0AAAAAgB5AAAAAwANBAAABADhAwAAAQANBAAAAQAM
BgAAAQCPBQAAAQCPBQAAAQCzAgkAKAQBABEAKAQGABkAKAQKACkAKAQQADEAKAQQADkAKAQQAEEA
KAQQAEkAKAQQAFEAKAQQAFkAKAQQAGEAKAQQAGkAKAQGAJkAKAQGALkAKAQVAMkAKAQGAIkAnAIG
AIkApwIGANEA0wIfANkARQUjAHEAKAQpAHEAOQMzAHEAMQMBAOEAKAQQAHEACAY5AHEAUwU5AIkA
KAQGANkAMgU9AIkAGAVEAJEAKAQGAPEAZwBKAPEAIAZRAKEAKARXAMEAKAQGAC4ACwDXAC4AEwDg
AC4AGwD/AC4AIwAIAS4AKwAxAS4AMwAxAS4AOwAxAS4AQwAIAS4ASwA3AS4AUwAxAS4AWwBOAUMA
YwCYAWkAcwD/AIkAcwD/AOMAawCYAQEBewCYARsAAwABAAcAAwAIAAUAAAAUBsAAAAAeA8QAAAAY
BMgAAADJAM0AAABjBdIAAQAGAAMAAQAHAAUAAgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEA
AAAAAAAAAAAAAAAAEAAAAAQAAAAAAAAAAAAAAF8APAAAAAAAEAAAAAAAAAAAAAAAaACfBQAAAAAQ
AAAAAAAAAAAAAABoALwFAAAAAAQAAAAAAAAAAAAAAF8AQgMAAAAAAAAAAAEAAAB5BAAAAAAAAABJ
bnQzMgA8TW9kdWxlPgBTQ185NTY4QjI5ODhGOTU0MEFFOEIzN0QxNkYyNURGQTRFQwBJbnB1dElE
AG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhl
Y3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTQ185NTY4QjI5ODhGOTU0MEFFOEIzN0QxNkYyNURGQTRFQy5kbGwAc2V0X2xv
Y2F0aW9ua2V5X0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0
dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZm
ZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5E
aWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJj
ZXMAU0NfZjc0ZGQ3OTc1N2RjNGY2OWJkYzJkYzQzMjY4Zjc5OTAuUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2Y3NGRkNzk3NTdkYzRmNjliZGMyZGM0MzI2
OGY3OTkwLlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1u
SW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQ29uY2F0AE9iamVjdABFbmRPZlJv
d3NldABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21w
b25lbnQAY291bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRS
b3cATmV4dFJvdwBzZXRfbG9jYXRpb25rZXkAZ2V0X0Fzc2VtYmx5AAAAAAARbABvAGMAYQB0AGkA
bwBuAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUA
IABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBl
ACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUA
dAAgADAAAHFTAEMAXwBmADcANABkAGQANwA5ADcANQA3AGQAYwA0AGYANgA5AGIAZABjADIAZABj
ADQAMwAyADYAOABmADcAOQA5ADAALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIA
YwBlAHMAAAAALt9M7PE4DkqPFDagO3dCXwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQMHAQ4D
IAAOBQACDg4OCSADARI9HQgSQQUgAgEIHAMgAAIGIAICDhF1BSABHQgIBgABEnkRfQUgABKAgQcg
AgEOEoCBCLd6XFYZNOCJCImEXc2AgMyRAgYIAwYSFAMGEhgDBhJFAwYSUQMGElUDBhIgBSABARIM
BCABAQIJIAQBCA4SPRJBBSABARJFBAAAElEEAAASVQUAAQESVQQAABIgAwAAAQMoAA4DKAACBAgA
ElEECAASVQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTQ19mNzRkZDc5NzU3ZGM0ZjY5YmRjMmRjNDMyNjhmNzk5MAAABQEAAAAAFgEAEUNv
cHlyaWdodCBAICAyMDIzAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAAAAAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEwx
AAAAAAAAAAAAAGYxAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYMQAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AZgA3ADQAZABkADcAOQA3ADUANwBkAGMANABmADYAOQBiAGQAYwAyAGQAYwA0ADMA
MgA2ADgAZgA3ADkAOQAwAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA5ADUANgA4AEIA
MgA5ADgAOABGADkANQA0ADAAQQBFADgAQgAzADcARAAxADYARgAyADUARABGAEEANABFAEMALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADkA
NQA2ADgAQgAyADkAOAA4AEYAOQA1ADQAMABBAEUAOABCADMANwBEADEANgBGADIANQBEAEYAQQA0
AEUAQwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmADcA
NABkAGQANwA5ADcANQA3AGQAYwA0AGYANgA5AGIAZABjADIAZABjADQAMwAyADYAOABmADcAOQA5
ADAAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHgxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_9568b2988f9540ae8b37d16f25dfa4ec</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">B9</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Location\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Location\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DIM_Location\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Location\Script Component.Outputs[Output 0].Columns[location_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DIM_Location\Script Component.Outputs[Output 0].Columns[location_key]"
                      name="location_key" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DIM_Location.Paths[Aggregate Output 1]"
              endId="Package\DIM_Location\Script Component.Inputs[Input 0]"
              name="Aggregate Output 1"
              startId="Package\DIM_Location\Aggregate.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\DIM_Location.Paths[Excel Source Output]"
              endId="Package\DIM_Location\Aggregate.Inputs[Aggregate Input 1]"
              name="Excel Source Output"
              startId="Package\DIM_Location\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\DIM_Location.Paths[Output 0]"
              endId="Package\DIM_Location\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\DIM_Location\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DIM_Store"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{95B8BAC9-7EF6-46E2-9EFD-05B118D106AD}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:MaxErrorCount="5"
      DTS:ObjectName="DIM_Store"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DIM_Store\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Store\Aggregate.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Store\Aggregate.Inputs[Aggregate Input 1].Columns[store_number]"
                      cachedDataType="r8"
                      cachedName="store_number"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[store_number]" />
                    <inputColumn
                      refId="Package\DIM_Store\Aggregate.Inputs[Aggregate Input 1].Columns[store_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="store_name"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[store_name]" />
                    <inputColumn
                      refId="Package\DIM_Store\Aggregate.Inputs[Aggregate Input 1].Columns[address]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="address"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[address]" />
                    <inputColumn
                      refId="Package\DIM_Store\Aggregate.Inputs[Aggregate Input 1].Columns[city]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="city"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[city]" />
                    <inputColumn
                      refId="Package\DIM_Store\Aggregate.Inputs[Aggregate Input 1].Columns[zip_code]"
                      cachedDataType="r8"
                      cachedName="zip_code"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[zip_code]" />
                    <inputColumn
                      refId="Package\DIM_Store\Aggregate.Inputs[Aggregate Input 1].Columns[store_location]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="store_location"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[store_location]" />
                    <inputColumn
                      refId="Package\DIM_Store\Aggregate.Inputs[Aggregate Input 1].Columns[county_number]"
                      cachedDataType="r8"
                      cachedName="county_number"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[county_number]" />
                    <inputColumn
                      refId="Package\DIM_Store\Aggregate.Inputs[Aggregate Input 1].Columns[county]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="county"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[county]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[store_number]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[store_number]"
                      name="store_number">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[store_number]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[store_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[store_name]"
                      name="store_name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[store_name]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[address]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[address]"
                      name="address">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[address]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[city]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[city]"
                      name="city">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[city]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[zip_code]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[zip_code]"
                      name="zip_code">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[zip_code]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[store_location]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[store_location]"
                      name="store_location">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[store_location]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[county_number]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[county_number]"
                      name="county_number">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[county_number]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[county]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[county]"
                      name="county">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[county]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Store\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Store\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[invoice_and_item_number]"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]"
                      name="invoice_and_item_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[date]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[date]"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[date]"
                      name="date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[store_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_number]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[store_number]"
                      name="store_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[store_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_name]"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[store_name]"
                      name="store_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[address]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[address]"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[address]"
                      name="address"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[city]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[city]"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[city]"
                      name="city"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[zip_code]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[zip_code]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[zip_code]"
                      name="zip_code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[store_location]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_location]"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[store_location]"
                      name="store_location"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[county_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[county_number]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[county_number]"
                      name="county_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[county]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[county]"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[county]"
                      name="county"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[category]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[category]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[category]"
                      name="category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[category_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[category_name]"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[category_name]"
                      name="category_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_number]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]"
                      name="vendor_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_name]"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]"
                      name="vendor_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[item_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_number]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[item_number]"
                      name="item_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[item_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_description]"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[item_description]"
                      name="item_description"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[pack]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[pack]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[pack]"
                      name="pack"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottle_volume_ml]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]"
                      name="bottle_volume_ml"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_cost]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]"
                      name="state_bottle_cost"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_retail]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]"
                      name="state_bottle_retail"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottles_sold]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]"
                      name="bottles_sold"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[sale_dollars]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]"
                      name="sale_dollars"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_liters]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]"
                      name="volume_sold_liters"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_gallons]"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]"
                      name="volume_sold_gallons"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      name="invoice_and_item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[date]"
                      dataType="date"
                      name="date" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_number]"
                      dataType="r8"
                      name="store_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_name]"
                      dataType="wstr"
                      length="255"
                      name="store_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[address]"
                      dataType="wstr"
                      length="255"
                      name="address" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="255"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[zip_code]"
                      dataType="r8"
                      name="zip_code" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_location]"
                      dataType="wstr"
                      length="255"
                      name="store_location" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[county_number]"
                      dataType="r8"
                      name="county_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[county]"
                      dataType="wstr"
                      length="255"
                      name="county" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[category]"
                      dataType="r8"
                      name="category" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[category_name]"
                      dataType="wstr"
                      length="255"
                      name="category_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_number]"
                      dataType="r8"
                      name="vendor_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      name="vendor_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_number]"
                      dataType="r8"
                      name="item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_description]"
                      dataType="wstr"
                      length="255"
                      name="item_description" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[pack]"
                      dataType="r8"
                      name="pack" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottle_volume_ml]"
                      dataType="r8"
                      name="bottle_volume_ml" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_cost]"
                      dataType="r8"
                      name="state_bottle_cost" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_retail]"
                      dataType="r8"
                      name="state_bottle_retail" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottles_sold]"
                      dataType="r8"
                      name="bottles_sold" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[sale_dollars]"
                      dataType="r8"
                      name="sale_dollars" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_liters]"
                      dataType="r8"
                      name="volume_sold_liters" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_gallons]"
                      dataType="r8"
                      name="volume_sold_gallons" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[invoice_and_item_number]"
                      name="invoice_and_item_number" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[date]"
                      dataType="date"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[date]"
                      name="date" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[store_number]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[store_number]"
                      name="store_number" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[store_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[store_name]"
                      name="store_name" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[address]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[address]"
                      name="address" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[city]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[city]"
                      name="city" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[zip_code]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[zip_code]"
                      name="zip_code" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[store_location]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[store_location]"
                      name="store_location" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[county_number]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[county_number]"
                      name="county_number" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[county]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[county]"
                      name="county" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[category]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[category]"
                      name="category" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[category_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[category_name]"
                      name="category_name" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_number]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_number]"
                      name="vendor_number" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_name]"
                      name="vendor_name" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[item_number]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[item_number]"
                      name="item_number" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[item_description]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[item_description]"
                      name="item_description" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[pack]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[pack]"
                      name="pack" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[bottle_volume_ml]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[bottle_volume_ml]"
                      name="bottle_volume_ml" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_cost]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_cost]"
                      name="state_bottle_cost" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_retail]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_retail]"
                      name="state_bottle_retail" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[bottles_sold]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[bottles_sold]"
                      name="bottles_sold" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[sale_dollars]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[sale_dollars]"
                      name="sale_dollars" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_liters]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_liters]"
                      name="volume_sold_liters" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_gallons]"
                      dataType="r8"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_gallons]"
                      name="volume_sold_gallons" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Store\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Store\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DIM_Store]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Store\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[store_number]"
                      cachedDataType="r8"
                      cachedName="store_number"
                      externalMetadataColumnId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[store_number]"
                      lineageId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[store_number]" />
                    <inputColumn
                      refId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[store_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="store_name"
                      externalMetadataColumnId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[store_name]"
                      lineageId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[store_name]" />
                    <inputColumn
                      refId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[store_location]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="store_location"
                      externalMetadataColumnId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[store_location]"
                      lineageId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1].Columns[store_location]" />
                    <inputColumn
                      refId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[store_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="store_key"
                      externalMetadataColumnId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[store_key]"
                      lineageId="Package\DIM_Store\Script Component.Outputs[Output 0].Columns[store_key]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[store_number]"
                      dataType="r8"
                      name="store_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[store_name]"
                      dataType="wstr"
                      length="255"
                      name="store_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[store_location]"
                      dataType="wstr"
                      length="255"
                      name="store_location" />
                    <externalMetadataColumn
                      refId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[store_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="store_key" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Store\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Store\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Store\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Store\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Store\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Store\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }
    int count;

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        count++;
        string key = "S" + count;
        Row.storekey = key; 
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String storekey
    {
        set
        {
            this[0] = value;
        }
    }
    public bool storekey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f423a3494d7c4eb18e5edd71b32400a7.Properties.Settings.get_Default():SC_f423a3494d7c4eb18e5edd71b32400a7.Properties.Sett" +
    "ings")]

namespace SC_f423a3494d7c4eb18e5edd71b32400a7.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f423a3494d7c4eb18e5edd71b32400a7.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c151575a-b60c-4696-a980-d7ee7720ec31}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f423a3494d7c4eb18e5edd71b32400a7</RootNamespace>
    <AssemblyName>SC_f423a3494d7c4eb18e5edd71b32400a7</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_f423a3494d7c4eb18e5edd71b32400a7" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_f423a3494d7c4eb18e5edd71b32400a7</msb:CodeName>
    <msb:DisplayName>SC_f423a3494d7c4eb18e5edd71b32400a7</msb:DisplayName>
    <msb:ProjectId>{B0DAF391-0D57-44E3-AB15-C9F4AA0664A5}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f423a3494d7c4eb18e5edd71b32400a7.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f423a3494d7c4eb18e5edd71b32400a7")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f423a3494d7c4eb18e5edd71b32400a7")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f423a3494d7c4eb18e5edd71b32400a7.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f423a3494d7c4eb18e5edd71b32400a7.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f423a3494d7c4eb18e5edd71b32400a7.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f423a3494d7c4eb18e5edd71b32400a7.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f423a3494d7c4eb18e5edd71b32400a7.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f423a3494d7c4eb18e5edd71b32400a7.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAA7himUAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAYjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABAxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAaBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABE
MQAAAAAAAEgAAAACAAUAtCEAAKQOAAABAAAAAAAAAFgwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMALAAAAAEAABECAnsBAAAE
F1h9AQAABHIBAABwAnwBAAAEKBIAAAooEwAACgoDBm8GAAAGKh4CKAoAAAYqKgIDBAUoFAAACiom
AhYDKBUAAAoqWgMsCAIWKBYAAAoqcgUAAHBzFwAACnoeAigYAAAKKh4CKBkAAAoqfgIoGgAACgIC
cw4AAAZ9AgAABAICcw8AAAZ9AwAABCqSBHKiAABwGm8bAAAKLBUCBQIDKBwAAAoOBHMFAAAGbwwA
AAYqSisHAgNvDQAABgNvCAAABi3xKgYqOgIoHQAACgIDfQQAAAQqOgIoHQAACgIDfQUAAAQqHgIo
HQAACiqufgYAAAQtHnKyAABw0AcAAAIoHgAACm8fAAAKcyAAAAqABgAABH4GAAAEKhp+BwAABCoe
AoAHAAAEKhp+CAAABCoeAighAAAKKi5zFQAABoAIAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAOAUAACN+AACkBQAAKAYAACNTdHJpbmdzAAAAAMwLAAAkAQAAI1VTAPAM
AAAQAAAAI0dVSUQAAAAADQAApAEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAA
ACAAAAAIAAAACAAAABYAAAAPAAAAIQAAABAAAAABAAAAAwAAAAUAAAAGAAAAAQAAAAQAAAABAAAA
AADyAgEAAAAAAAYA6gFFBAYAfgJFBAYANgEyBA8AuQQAAAYAYwGHAwYAzQGHAwYArgGHAwYAZQKH
AwYACgKHAwYAIwKHAwYAegGHAwYAlQG5AgoAPgKDAAoABASDAA4A9QODAAoA0AODAAoAhgWDAAYA
SQU/AwYAGQEyBAYAFQRlBAYAxANyAxIA6QDcAhIASgHcAhIA0QBdAwYA/gBFBAYAAQA/AwYA1QI/
AwYAmQM/AwYAswM/AwYApAA/AwYAVQA/AwYAHgaHAwAAAAArAAAAAAABAAEAAQAQAFIDAAAQAAEA
AQABABAA6AMAADkAAgAFAAEAEABoBQAARQACAAoAAQAQADYFAABJAAQADgABABAA9wQAAEkABQAP
AAAAEABsBMgESQAGABAAAAEQACYFyARhAAgAFAABAJYFcQAGADYFdAAGAPcEeAABAHYFfAABAHYF
fAARAEYDgAARAMEAhAARAEUAiABQIAAAAADGAJwCBgABAFggAAAAAMYApwIGAAEAYCAAAAAAxgDu
BYwAAQCYIAAAAACGGCUEBgACAKAgAAAAAIYYJQQpAAIAqyAAAAAAhggNBhAABQC1IAAAAACGCBoD
kgAGAMwgAAAAAIYABQY5AAcA1CAAAAAAhgBQBTkABwDcIAAAAACGGCUEBgAHAPwgAAAAAMYA4QWX
AAcAISEAAAAAxgHaBYwACwA0IQAAAADGAe4FjAAMADYhAAAAAIYYJQShAA0ARSEAAAAAhhglBKEA
DgBUIQAAAACDGCUEBgAPAFwhAAAAAJMIEQSnAA8AiCEAAAAAkwipAKwADwCPIQAAAACTCLUAsQAP
AJchAAAAAJYIXAW3ABAAniEAAAAAhhglBAYAEACmIQAAAACRGCsEvAAQAAAAAQAJBgAAAQAKBAAA
AgABBQAAAwDeAwAAAQCzAgAAAQCzAgAAAQA0AAAAAgB5AAAAAwAKBAAABADeAwAAAQAKBAAAAQAJ
BgAAAQCMBQAAAQCMBQAAAQCzAgkAJQQBABEAJQQGABkAJQQKACkAJQQQADEAJQQQADkAJQQQAEEA
JQQQAEkAJQQQAFEAJQQQAFkAJQQQAGEAJQQQAGkAJQQGAJkAJQQGALkAJQQVAMkAJQQGAIkAnAIG
AIkApwIGANEA0wIfANkAQgUjAHEAJQQpAHEANgMzAHEALgMBAOEAJQQQAHEABQY5AHEAUAU5AIkA
JQQGANkALwU9AIkAFQVEAJEAJQQGAPEAZwBKAPEAGgZRAKEAJQRXAMEAJQQGAC4ACwDXAC4AEwDg
AC4AGwD/AC4AIwAIAS4AKwAxAS4AMwAxAS4AOwAxAS4AQwAIAS4ASwA3AS4AUwAxAS4AWwBOAUMA
YwCcAWkAcwD/AIkAcwD/AOMAawCcAQEBewCcARsAAwABAAcAAwAIAAUAAAARBsAAAAAeA8QAAAAV
BMgAAADJAM0AAABgBdIAAQAGAAMAAQAHAAUAAgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEA
AAAAAAAAAAAAAAAABwAAAAQAAAAAAAAAAAAAAF8APAAAAAAAEAAAAAAAAAAAAAAAaACcBQAAAAAQ
AAAAAAAAAAAAAABoALkFAAAAAAQAAAAAAAAAAAAAAF8APwMAAAAAAAAAAAEAAAB2BAAAAAAAAABJ
bnQzMgBTQ19mNDIzYTM0OTRkN2M0ZWIxOGU1ZWRkNzFiMzI0MDBhNwA8TW9kdWxlPgBJbnB1dElE
AG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhl
Y3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTQ19mNDIzYTM0OTRkN2M0ZWIxOGU1ZWRkNzFiMzI0MDBhNy5kbGwAc2V0X3N0
b3Jla2V5X0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRN
YWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJl
SW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIA
U2NyaXB0QnVmZmVyAGdldF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFn
bm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMA
U0NfZjQyM2EzNDk0ZDdjNGViMThlNWVkZDcxYjMyNDAwYTcuUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDX2Y0MjNhMzQ5NGQ3YzRlYjE4ZTVlZGQ3MWIzMjQw
MGE3LlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5k
ZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAQ29uY2F0AE9iamVjdABFbmRPZlJvd3Nl
dABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25l
bnQAY291bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVy
LlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cA
TmV4dFJvdwBzZXRfc3RvcmVrZXkAZ2V0X0Fzc2VtYmx5AAAAA1MAAICbSQBzAE4AdQBsAGwAIABw
AHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwA
cwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBs
AHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfAGYANAAyADMA
YQAzADQAOQA0AGQANwBjADQAZQBiADEAOABlADUAZQBkAGQANwAxAGIAMwAyADQAMAAwAGEANwAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAklURmNkvN0C9MlKXJUvY
QQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQMHAQ4DIAAOBQACDg4OCSADARI9HQgSQQUgAgEI
HAMgAAIGIAICDhF1BSABHQgIBgABEnkRfQUgABKAgQcgAgEOEoCBCLd6XFYZNOCJCImEXc2AgMyR
AgYIAwYSFAMGEhgDBhJFAwYSUQMGElUDBhIgBSABARIMBCABAQIJIAQBCA4SPRJBBSABARJFBAAA
ElEEAAASVQUAAQESVQQAABIgAwAAAQMoAA4DKAACBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19mNDIzYTM0OTRkN2M0
ZWIxOGU1ZWRkNzFiMzI0MDBhNwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIzAABNAQAcLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjcuMgEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUULk5FVCBG
cmFtZXdvcmsgNC43LjIEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA4MQAAAAAAAAAAAABSMQAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAARDEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AZgA0ADIAMwBhADMANAA5ADQAZAA3AGMANABlAGIAMQA4AGUANQBlAGQAZAA3ADEA
YgAzADIANAAwADAAYQA3AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmADQAMgAzAGEA
MwA0ADkANABkADcAYwA0AGUAYgAxADgAZQA1AGUAZABkADcAMQBiADMAMgA0ADAAMABhADcALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGYA
NAAyADMAYQAzADQAOQA0AGQANwBjADQAZQBiADEAOABlADUAZQBkAGQANwAxAGIAMwAyADQAMAAw
AGEANwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmADQA
MgAzAGEAMwA0ADkANABkADcAYwA0AGUAYgAxADgAZQA1AGUAZABkADcAMQBiADMAMgA0ADAAMABh
ADcAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGQxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_f423a3494d7c4eb18e5edd71b32400a7</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">8D</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Store\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Store\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DIM_Store\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Store\Script Component.Outputs[Output 0].Columns[store_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DIM_Store\Script Component.Outputs[Output 0].Columns[store_key]"
                      name="store_key" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DIM_Store.Paths[Aggregate Output 1]"
              endId="Package\DIM_Store\Script Component.Inputs[Input 0]"
              name="Aggregate Output 1"
              startId="Package\DIM_Store\Aggregate.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\DIM_Store.Paths[Excel Source Output]"
              endId="Package\DIM_Store\Aggregate.Inputs[Aggregate Input 1]"
              name="Excel Source Output"
              startId="Package\DIM_Store\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\DIM_Store.Paths[Output 0]"
              endId="Package\DIM_Store\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\DIM_Store\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DIM_Time"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{DBCC9B9C-5362-428E-92F4-6C3BF71972C0}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DIM_Time"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DIM_Time\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Time\Aggregate.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Time\Aggregate.Inputs[Aggregate Input 1].Columns[date]"
                      cachedDataType="date"
                      cachedName="date"
                      lineageId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].Columns[date]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Time\Aggregate.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Time\Aggregate.Outputs[Aggregate Output 1].Columns[date]"
                      dataType="date"
                      lineageId="Package\DIM_Time\Aggregate.Outputs[Aggregate Output 1].Columns[date]"
                      name="date">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Time\Excel Source.Outputs[Excel Source Output].Columns[date]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Time\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DIM_Time\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Time\Data Conversion.Inputs[Data Conversion Input].Columns[date]"
                      cachedDataType="date"
                      cachedName="date"
                      lineageId="Package\DIM_Time\Aggregate.Outputs[Aggregate Output 1].Columns[date]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Time\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\DIM_Time\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Time\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DIM_Time\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]"
                      name="Copy of date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\DIM_Time\Aggregate.Outputs[Aggregate Output 1].Columns[date]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DIM_Time\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\DIM_Time\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Time\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Time\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Time\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Time\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Time\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\DIM_Time\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Time\Derived Column.Inputs[Derived Column Input].Columns[Copy of date]"
                      cachedDataType="date"
                      cachedName="Copy of date"
                      lineageId="Package\DIM_Time\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\DIM_Time\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output].Columns[date]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output].Columns[date]"
                      name="date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DAY](#{Package\DIM_Time\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DAY([Copy of date])</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output].Columns[month]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output].Columns[month]"
                      name="month"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[MONTH](#{Package\DIM_Time\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">MONTH([Copy of date])</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output].Columns[quarter]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output].Columns[quarter]"
                      name="quarter"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("QQ",#{Package\DIM_Time\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("QQ",[Copy of date])</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output].Columns[year]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output].Columns[year]"
                      name="year"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[YEAR](#{Package\DIM_Time\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">YEAR([Copy of date])</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\DIM_Time\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\DIM_Time\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Time\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Time\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Time\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Time\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Time\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Time\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].Columns[date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[date]"
                      lineageId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].Columns[date]"
                      name="date"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      name="invoice_and_item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[date]"
                      dataType="date"
                      name="date" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_number]"
                      dataType="r8"
                      name="store_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_name]"
                      dataType="wstr"
                      length="255"
                      name="store_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[address]"
                      dataType="wstr"
                      length="255"
                      name="address" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="255"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[zip_code]"
                      dataType="r8"
                      name="zip_code" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_location]"
                      dataType="wstr"
                      length="255"
                      name="store_location" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[county_number]"
                      dataType="r8"
                      name="county_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[county]"
                      dataType="wstr"
                      length="255"
                      name="county" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[category]"
                      dataType="r8"
                      name="category" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[category_name]"
                      dataType="wstr"
                      length="255"
                      name="category_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_number]"
                      dataType="r8"
                      name="vendor_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      name="vendor_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_number]"
                      dataType="r8"
                      name="item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_description]"
                      dataType="wstr"
                      length="255"
                      name="item_description" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[pack]"
                      dataType="r8"
                      name="pack" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottle_volume_ml]"
                      dataType="r8"
                      name="bottle_volume_ml" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_cost]"
                      dataType="r8"
                      name="state_bottle_cost" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_retail]"
                      dataType="r8"
                      name="state_bottle_retail" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottles_sold]"
                      dataType="r8"
                      name="bottles_sold" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[sale_dollars]"
                      dataType="r8"
                      name="sale_dollars" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_liters]"
                      dataType="r8"
                      name="volume_sold_liters" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_gallons]"
                      dataType="r8"
                      name="volume_sold_gallons" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Time\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Time\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\DIM_Time\Excel Source.Outputs[Excel Source Error Output].Columns[date]"
                      dataType="date"
                      lineageId="Package\DIM_Time\Excel Source.Outputs[Excel Source Error Output].Columns[date]"
                      name="date" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Time\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DIM_Time]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Time\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[month]"
                      cachedDataType="i4"
                      cachedName="month"
                      externalMetadataColumnId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      lineageId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output].Columns[month]" />
                    <inputColumn
                      refId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[quarter]"
                      cachedDataType="i4"
                      cachedName="quarter"
                      externalMetadataColumnId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[quarter]"
                      lineageId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output].Columns[quarter]" />
                    <inputColumn
                      refId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[year]"
                      cachedDataType="i4"
                      cachedName="year"
                      externalMetadataColumnId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      lineageId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output].Columns[year]" />
                    <inputColumn
                      refId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[time_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="time_key"
                      externalMetadataColumnId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[time_key]"
                      lineageId="Package\DIM_Time\Script Component.Outputs[Output 0].Columns[time_key]" />
                    <inputColumn
                      refId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[date]"
                      cachedDataType="i4"
                      cachedName="date"
                      externalMetadataColumnId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[date]"
                      lineageId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output].Columns[date]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[month]"
                      dataType="i4"
                      name="month" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[quarter]"
                      dataType="i4"
                      name="quarter" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[year]"
                      dataType="i4"
                      name="year" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[time_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="time_key" />
                    <externalMetadataColumn
                      refId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[date]"
                      dataType="dbTimeStamp"
                      name="date" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Time\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Time\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Time\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Time\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Time\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Time\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }
    int count;

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        count++;
        string key = "T" + count;
        Row.timekey = key; 
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String timekey
    {
        set
        {
            this[0] = value;
        }
    }
    public bool timekey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ebb7c802f910478d8a9b2c393377e887.Properties.Settings.get_Default():SC_ebb7c802f910478d8a9b2c393377e887.Properties.Sett" +
    "ings")]

namespace SC_ebb7c802f910478d8a9b2c393377e887.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_ebb7c802f910478d8a9b2c393377e887.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9eda4747-ab53-456d-9f28-72b1f39eb2a5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_ebb7c802f910478d8a9b2c393377e887</RootNamespace>
    <AssemblyName>SC_ebb7c802f910478d8a9b2c393377e887</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_ebb7c802f910478d8a9b2c393377e887" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_ebb7c802f910478d8a9b2c393377e887</msb:CodeName>
    <msb:DisplayName>SC_ebb7c802f910478d8a9b2c393377e887</msb:DisplayName>
    <msb:ProjectId>{30A68082-AAF7-486A-BAFB-B44B638A1513}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_ebb7c802f910478d8a9b2c393377e887.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_ebb7c802f910478d8a9b2c393377e887")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_ebb7c802f910478d8a9b2c393377e887")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ebb7c802f910478d8a9b2c393377e887.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ebb7c802f910478d8a9b2c393377e887.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_ebb7c802f910478d8a9b2c393377e887.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_ebb7c802f910478d8a9b2c393377e887.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_ebb7c802f910478d8a9b2c393377e887.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_ebb7c802f910478d8a9b2c393377e887.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGDximUAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAYjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABAxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAaBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABE
MQAAAAAAAEgAAAACAAUAtCEAAKQOAAABAAAAAAAAAFgwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMALAAAAAEAABECAnsBAAAE
F1h9AQAABHIBAABwAnwBAAAEKBIAAAooEwAACgoDBm8GAAAGKh4CKAoAAAYqKgIDBAUoFAAACiom
AhYDKBUAAAoqWgMsCAIWKBYAAAoqcgUAAHBzFwAACnoeAigYAAAKKh4CKBkAAAoqfgIoGgAACgIC
cw4AAAZ9AgAABAICcw8AAAZ9AwAABCqSBHKiAABwGm8bAAAKLBUCBQIDKBwAAAoOBHMFAAAGbwwA
AAYqSisHAgNvDQAABgNvCAAABi3xKgYqOgIoHQAACgIDfQQAAAQqOgIoHQAACgIDfQUAAAQqHgIo
HQAACiqufgYAAAQtHnKyAABw0AcAAAIoHgAACm8fAAAKcyAAAAqABgAABH4GAAAEKhp+BwAABCoe
AoAHAAAEKhp+CAAABCoeAighAAAKKi5zFQAABoAIAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAOAUAACN+AACkBQAAKAYAACNTdHJpbmdzAAAAAMwLAAAkAQAAI1VTAPAM
AAAQAAAAI0dVSUQAAAAADQAApAEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAA
ACAAAAAIAAAACAAAABYAAAAPAAAAIQAAABAAAAABAAAAAwAAAAUAAAAGAAAAAQAAAAQAAAABAAAA
AADyAgEAAAAAAAYA6gFEBAYAfgJEBAYANgExBA8AuAQAAAYAYwGGAwYAzQGGAwYArgGGAwYAZQKG
AwYACgKGAwYAIwKGAwYAegGGAwYAlQG5AgoAPgKDAAoAAwSDAA4A9AODAAoAzwODAAoAhQWDAAYA
SAU+AwYAGQExBAYAFARkBAYAwwNxAxIA6QDcAhIASgHcAhIA0QBcAwYA/gBEBAYAAQA+AwYA1QI+
AwYAmAM+AwYAsgM+AwYApAA+AwYAVQA+AwYAHAaGAwAAAAArAAAAAAABAAEAAQAQAFEDAAAQAAEA
AQABABAA5wMAADkAAgAFAAEAEABnBQAARQACAAoAAQAQADUFAABJAAQADgABABAA9gQAAEkABQAP
AAAAEABrBMcESQAGABAAAAEQACUFxwRhAAgAFAABAJUFcQAGADUFdAAGAPYEeAABAHUFfAABAHUF
fAARAEUDgAARAMEAhAARAEUAiABQIAAAAADGAJwCBgABAFggAAAAAMYApwIGAAEAYCAAAAAAxgDt
BYwAAQCYIAAAAACGGCQEBgACAKAgAAAAAIYYJAQpAAIAqyAAAAAAhggMBhAABQC1IAAAAACGCBoD
kgAGAMwgAAAAAIYABAY5AAcA1CAAAAAAhgBPBTkABwDcIAAAAACGGCQEBgAHAPwgAAAAAMYA4AWX
AAcAISEAAAAAxgHZBYwACwA0IQAAAADGAe0FjAAMADYhAAAAAIYYJAShAA0ARSEAAAAAhhgkBKEA
DgBUIQAAAACDGCQEBgAPAFwhAAAAAJMIEASnAA8AiCEAAAAAkwipAKwADwCPIQAAAACTCLUAsQAP
AJchAAAAAJYIWwW3ABAAniEAAAAAhhgkBAYAEACmIQAAAACRGCoEvAAQAAAAAQAIBgAAAQAJBAAA
AgAABQAAAwDdAwAAAQCzAgAAAQCzAgAAAQA0AAAAAgB5AAAAAwAJBAAABADdAwAAAQAJBAAAAQAI
BgAAAQCLBQAAAQCLBQAAAQCzAgkAJAQBABEAJAQGABkAJAQKACkAJAQQADEAJAQQADkAJAQQAEEA
JAQQAEkAJAQQAFEAJAQQAFkAJAQQAGEAJAQQAGkAJAQGAJkAJAQGALkAJAQVAMkAJAQGAIkAnAIG
AIkApwIGANEA0wIfANkAQQUjAHEAJAQpAHEANQMzAHEALQMBAOEAJAQQAHEABAY5AHEATwU5AIkA
JAQGANkALgU9AIkAFAVEAJEAJAQGAPEAZwBKAPEAGAZRAKEAJARXAMEAJAQGAC4ACwDXAC4AEwDg
AC4AGwD/AC4AIwAIAS4AKwAxAS4AMwAxAS4AOwAxAS4AQwAIAS4ASwA3AS4AUwAxAS4AWwBOAUMA
YwCcAWkAcwD/AIkAcwD/AOMAawCcAQEBewCcARsAAwABAAcAAwAIAAUAAAAQBsAAAAAeA8QAAAAU
BMgAAADJAM0AAABfBdIAAQAGAAMAAQAHAAUAAgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEA
AAAAAAAAAAAAAAAABwAAAAQAAAAAAAAAAAAAAF8APAAAAAAAEAAAAAAAAAAAAAAAaACbBQAAAAAQ
AAAAAAAAAAAAAABoALgFAAAAAAQAAAAAAAAAAAAAAF8APgMAAAAAAAAAAAEAAAB1BAAAAAAAAABJ
bnQzMgBTQ19lYmI3YzgwMmY5MTA0NzhkOGE5YjJjMzkzMzc3ZTg4NwA8TW9kdWxlPgBJbnB1dElE
AG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhl
Y3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTQ19lYmI3YzgwMmY5MTA0NzhkOGE5YjJjMzkzMzc3ZTg4Ny5kbGwAc2V0X3Rp
bWVrZXlfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1h
aW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxl
Y3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJ
bmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBT
Y3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdu
b3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
Q19lYmI3YzgwMmY5MTA0NzhkOGE5YjJjMzkzMzc3ZTg4Ny5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZWJiN2M4MDJmOTEwNDc4ZDhhOWIyYzM5MzM3N2U4
ODcuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRl
eGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBDb25jYXQAT2JqZWN0AEVuZE9mUm93c2V0
AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVu
dABjb3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
UGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBO
ZXh0Um93AHNldF90aW1la2V5AGdldF9Bc3NlbWJseQAAAAAAA1QAAICbSQBzAE4AdQBsAGwAIABw
AHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwA
cwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBs
AHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAAMAAAcVMAQwBfAGUAYgBiADcA
YwA4ADAAMgBmADkAMQAwADQANwA4AGQAOABhADkAYgAyAGMAMwA5ADMAMwA3ADcAZQA4ADgANwAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAA7WxoK2G2nEOeyhrBgEHQ
mgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERWQMHAQ4DIAAOBQACDg4OCSADARI9HQgSQQUgAgEI
HAMgAAIGIAICDhF1BSABHQgIBgABEnkRfQUgABKAgQcgAgEOEoCBCLd6XFYZNOCJCImEXc2AgMyR
AgYIAwYSFAMGEhgDBhJFAwYSUQMGElUDBhIgBSABARIMBCABAQIJIAQBCA4SPRJBBSABARJFBAAA
ElEEAAASVQUAAQESVQQAABIgAwAAAQMoAA4DKAACBAgAElEECAASVQQIABIgCAEACAAAAAAAHgEA
AQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ19lYmI3YzgwMmY5MTA0
NzhkOGE5YjJjMzkzMzc3ZTg4NwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIzAABNAQAcLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjcuMgEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUULk5FVCBG
cmFtZXdvcmsgNC43LjIEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA4MQAAAAAAAAAAAABSMQAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAARDEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AZQBiAGIANwBjADgAMAAyAGYAOQAxADAANAA3ADgAZAA4AGEAOQBiADIAYwAzADkA
MwAzADcANwBlADgAOAA3AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBlAGIAYgA3AGMA
OAAwADIAZgA5ADEAMAA0ADcAOABkADgAYQA5AGIAMgBjADMAOQAzADMANwA3AGUAOAA4ADcALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGUA
YgBiADcAYwA4ADAAMgBmADkAMQAwADQANwA4AGQAOABhADkAYgAyAGMAMwA5ADMAMwA3ADcAZQA4
ADgANwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBlAGIA
YgA3AGMAOAAwADIAZgA5ADEAMAA0ADcAOABkADgAYQA5AGIAMgBjADMAOQAzADMANwA3AGUAOAA4
ADcAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGQxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_ebb7c802f910478d8a9b2c393377e887</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">0F</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Time\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Time\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DIM_Time\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Time\Script Component.Outputs[Output 0].Columns[time_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DIM_Time\Script Component.Outputs[Output 0].Columns[time_key]"
                      name="time_key" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DIM_Time.Paths[Aggregate Output 1]"
              endId="Package\DIM_Time\Data Conversion.Inputs[Data Conversion Input]"
              name="Aggregate Output 1"
              startId="Package\DIM_Time\Aggregate.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\DIM_Time.Paths[Data Conversion Output]"
              endId="Package\DIM_Time\Derived Column.Inputs[Derived Column Input]"
              name="Data Conversion Output"
              startId="Package\DIM_Time\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\DIM_Time.Paths[Derived Column Output]"
              endId="Package\DIM_Time\Script Component.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\DIM_Time\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\DIM_Time.Paths[Excel Source Output]"
              endId="Package\DIM_Time\Aggregate.Inputs[Aggregate Input 1]"
              name="Excel Source Output"
              startId="Package\DIM_Time\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\DIM_Time.Paths[Output 0]"
              endId="Package\DIM_Time\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\DIM_Time\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\DIM_Vendor"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{632A064D-FF5A-4B33-964F-27170A965C76}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="DIM_Vendor"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\DIM_Vendor\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Vendor\Aggregate.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Vendor\Aggregate.Inputs[Aggregate Input 1].Columns[vendor_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_name"
                      lineageId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]" />
                    <inputColumn
                      refId="Package\DIM_Vendor\Aggregate.Inputs[Aggregate Input 1].Columns[vendor_number]"
                      cachedDataType="r8"
                      cachedName="vendor_number"
                      lineageId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Vendor\Aggregate.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Vendor\Aggregate.Outputs[Aggregate Output 1].Columns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Vendor\Aggregate.Outputs[Aggregate Output 1].Columns[vendor_name]"
                      name="vendor_name">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\DIM_Vendor\Aggregate.Outputs[Aggregate Output 1].Columns[vendor_number]"
                      dataType="r8"
                      lineageId="Package\DIM_Vendor\Aggregate.Outputs[Aggregate Output 1].Columns[vendor_number]"
                      name="vendor_number">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Vendor\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Vendor\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_number]"
                      lineageId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]"
                      name="vendor_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_name]"
                      length="255"
                      lineageId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]"
                      name="vendor_name"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      name="invoice_and_item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[date]"
                      dataType="date"
                      name="date" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_number]"
                      dataType="r8"
                      name="store_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_name]"
                      dataType="wstr"
                      length="255"
                      name="store_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[address]"
                      dataType="wstr"
                      length="255"
                      name="address" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="255"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[zip_code]"
                      dataType="r8"
                      name="zip_code" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_location]"
                      dataType="wstr"
                      length="255"
                      name="store_location" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[county_number]"
                      dataType="r8"
                      name="county_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[county]"
                      dataType="wstr"
                      length="255"
                      name="county" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[category]"
                      dataType="r8"
                      name="category" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[category_name]"
                      dataType="wstr"
                      length="255"
                      name="category_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_number]"
                      dataType="r8"
                      name="vendor_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      name="vendor_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_number]"
                      dataType="r8"
                      name="item_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_description]"
                      dataType="wstr"
                      length="255"
                      name="item_description" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[pack]"
                      dataType="r8"
                      name="pack" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottle_volume_ml]"
                      dataType="r8"
                      name="bottle_volume_ml" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_cost]"
                      dataType="r8"
                      name="state_bottle_cost" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_retail]"
                      dataType="r8"
                      name="state_bottle_retail" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottles_sold]"
                      dataType="r8"
                      name="bottles_sold" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[sale_dollars]"
                      dataType="r8"
                      name="sale_dollars" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_liters]"
                      dataType="r8"
                      name="volume_sold_liters" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_gallons]"
                      dataType="r8"
                      name="volume_sold_gallons" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_number]"
                      dataType="r8"
                      lineageId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_number]"
                      name="vendor_number" />
                    <outputColumn
                      refId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_name]"
                      name="vendor_name" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Vendor\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[DIM_Vendor]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\DIM_Vendor\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\DIM_Vendor\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\DIM_Vendor\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[vendor_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_name"
                      externalMetadataColumnId="Package\DIM_Vendor\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[vendor_name]"
                      lineageId="Package\DIM_Vendor\Aggregate.Outputs[Aggregate Output 1].Columns[vendor_name]" />
                    <inputColumn
                      refId="Package\DIM_Vendor\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[vendor_number]"
                      cachedDataType="r8"
                      cachedName="vendor_number"
                      externalMetadataColumnId="Package\DIM_Vendor\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[vendor_number]"
                      lineageId="Package\DIM_Vendor\Aggregate.Outputs[Aggregate Output 1].Columns[vendor_number]" />
                    <inputColumn
                      refId="Package\DIM_Vendor\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[vendor_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="vendor_key"
                      externalMetadataColumnId="Package\DIM_Vendor\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[vendor_key]"
                      lineageId="Package\DIM_Vendor\Script Component.Outputs[Output 0].Columns[vendor_key]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      name="vendor_name" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[vendor_number]"
                      dataType="r8"
                      name="vendor_number" />
                    <externalMetadataColumn
                      refId="Package\DIM_Vendor\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[vendor_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="vendor_key" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Vendor\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\DIM_Vendor\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Vendor\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\DIM_Vendor\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\DIM_Vendor\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\DIM_Vendor\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\DIM_Vendor\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }
    int count;

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        count++;
        string key = "V"+count;
        Row.vendorkey = key;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String vendorkey
    {
        set
        {
            this[0] = value;
        }
    }
    public bool vendorkey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_eb59e0493fc440a28dfcbb965d787b98.Properties.Settings.get_Default():SC_eb59e0493fc440a28dfcbb965d787b98.Properties.Sett" +
    "ings")]

namespace SC_eb59e0493fc440a28dfcbb965d787b98.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_eb59e0493fc440a28dfcbb965d787b98.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2e2bbaa9-1b8e-4436-adaf-c4d7c7dbc442}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_eb59e0493fc440a28dfcbb965d787b98</RootNamespace>
    <AssemblyName>SC_eb59e0493fc440a28dfcbb965d787b98</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_eb59e0493fc440a28dfcbb965d787b98" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_eb59e0493fc440a28dfcbb965d787b98</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_eb59e0493fc440a28dfcbb965d787b98</msb:DisplayName>
    <msb:ProjectId>{BAA70F8A-6732-410F-8529-A01F3AA92449}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_eb59e0493fc440a28dfcbb965d787b98.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_eb59e0493fc440a28dfcbb965d787b98")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_eb59e0493fc440a28dfcbb965d787b98")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_eb59e0493fc440a28dfcbb965d787b98.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_eb59e0493fc440a28dfcbb965d787b98.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_eb59e0493fc440a28dfcbb965d787b98.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_eb59e0493fc440a28dfcbb965d787b98.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_eb59e0493fc440a28dfcbb965d787b98.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_eb59e0493fc440a28dfcbb965d787b98.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIbdimUAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAYjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABAxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAaBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABE
MQAAAAAAAEgAAAACAAUAtCEAAKQOAAABAAAAAAAAAFgwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMALAAAAAEAABECAnsBAAAE
F1h9AQAABHIBAABwAnwBAAAEKBIAAAooEwAACgoDBm8GAAAGKh4CKAoAAAYqKgIDBAUoFAAACiom
AhYDKBUAAAoqWgMsCAIWKBYAAAoqcgUAAHBzFwAACnoeAigYAAAKKh4CKBkAAAoqfgIoGgAACgIC
cw4AAAZ9AgAABAICcw8AAAZ9AwAABCqSBHKiAABwGm8bAAAKLBUCBQIDKBwAAAoOBHMFAAAGbwwA
AAYqSisHAgNvDQAABgNvCAAABi3xKgYqOgIoHQAACgIDfQQAAAQqOgIoHQAACgIDfQUAAAQqHgIo
HQAACiqufgYAAAQtHnKyAABw0AcAAAIoHgAACm8fAAAKcyAAAAqABgAABH4GAAAEKhp+BwAABCoe
AoAHAAAEKhp+CAAABCoeAighAAAKKi5zFQAABoAIAAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAOAUAACN+AACkBQAALAYAACNTdHJpbmdzAAAAANALAAAkAQAAI1VTAPQM
AAAQAAAAI0dVSUQAAAAEDQAAoAEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6ATMAFgAAAQAA
ACAAAAAIAAAACAAAABYAAAAPAAAAIQAAABAAAAABAAAAAwAAAAUAAAAGAAAAAQAAAAQAAAABAAAA
AADyAgEAAAAAAAYA6gFGBAYAfgJGBAYANgEzBA8AugQAAAYAYwGIAwYAzQGIAwYArgGIAwYAZQKI
AwYACgKIAwYAIwKIAwYAegGIAwYAlQG5AgoAPgKDAAoABQSDAA4A9gODAAoA0QODAAoAhwWDAAYA
SgVAAwYAGQEzBAYAFgRmBAYAxQNzAxIA6QDcAhIASgHcAhIA0QBeAwYA/gBGBAYAAQBAAwYA1QJA
AwYAmgNAAwYAtANAAwYApABAAwYAVQBAAwYAIAaIAwAAAAArAAAAAAABAAEAAQAQAFMDAAAQAAEA
AQABABAA6QMAADkAAgAFAAEAEABpBQAARQACAAoAAQAQADcFAABJAAQADgABABAA+AQAAEkABQAP
AAAAEABtBMkESQAGABAAAAEQACcFyQRhAAgAFAABAJcFcQAGADcFdAAGAPgEeAABAHcFfAABAHcF
fAARAEcDgAARAMEAhAARAEUAiABQIAAAAADGAJwCBgABAFggAAAAAMYApwIGAAEAYCAAAAAAxgDv
BYwAAQCYIAAAAACGGCYEBgACAKAgAAAAAIYYJgQpAAIAqyAAAAAAhggOBhAABQC1IAAAAACGCBoD
kgAGAMwgAAAAAIYABgY5AAcA1CAAAAAAhgBRBTkABwDcIAAAAACGGCYEBgAHAPwgAAAAAMYA4gWX
AAcAISEAAAAAxgHbBYwACwA0IQAAAADGAe8FjAAMADYhAAAAAIYYJgShAA0ARSEAAAAAhhgmBKEA
DgBUIQAAAACDGCYEBgAPAFwhAAAAAJMIEgSnAA8AiCEAAAAAkwipAKwADwCPIQAAAACTCLUAsQAP
AJchAAAAAJYIXQW3ABAAniEAAAAAhhgmBAYAEACmIQAAAACRGCwEvAAQAAAAAQAKBgAAAQALBAAA
AgACBQAAAwDfAwAAAQCzAgAAAQCzAgAAAQA0AAAAAgB5AAAAAwALBAAABADfAwAAAQALBAAAAQAK
BgAAAQCNBQAAAQCNBQAAAQCzAgkAJgQBABEAJgQGABkAJgQKACkAJgQQADEAJgQQADkAJgQQAEEA
JgQQAEkAJgQQAFEAJgQQAFkAJgQQAGEAJgQQAGkAJgQGAJkAJgQGALkAJgQVAMkAJgQGAIkAnAIG
AIkApwIGANEA0wIfANkAQwUjAHEAJgQpAHEANwMzAHEALwMBAOEAJgQQAHEABgY5AHEAUQU5AIkA
JgQGANkAMAU9AIkAFgVEAJEAJgQGAPEAZwBKAPEAHAZRAKEAJgRXAMEAJgQGAC4ACwDXAC4AEwDg
AC4AGwD/AC4AIwAIAS4AKwAxAS4AMwAxAS4AOwAxAS4AQwAIAS4ASwA3AS4AUwAxAS4AWwBOAUMA
YwCYAWkAcwD/AIkAcwD/AOMAawCYAQEBewCYARsAAwABAAcAAwAIAAUAAAASBsAAAAAeA8QAAAAW
BMgAAADJAM0AAABhBdIAAQAGAAMAAQAHAAUAAgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEA
AAAAAAAAAAAAAAAABwAAAAQAAAAAAAAAAAAAAF8APAAAAAAAEAAAAAAAAAAAAAAAaACdBQAAAAAQ
AAAAAAAAAAAAAABoALoFAAAAAAQAAAAAAAAAAAAAAF8AQAMAAAAAAAAAAAEAAAB3BAAAAAAAAABJ
bnQzMgBTQ19lYjU5ZTA0OTNmYzQ0MGEyOGRmY2JiOTY1ZDc4N2I5OAA8TW9kdWxlPgBJbnB1dElE
AG1zY29ybGliAGRlZmF1bHRJbnN0YW5jZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhh
bmRsZQBJbnB1dE5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRf
Q3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jh
c2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdn
ZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmli
dXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1
dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0
cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0
ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlB
dHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhl
Y3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTQ19lYjU5ZTA0OTNmYzQ0MGEyOGRmY2JiOTY1ZDc4N2I5OC5kbGwAc2V0X3Zl
bmRvcmtleV9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0
TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVm
bGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVy
ZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVy
AFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlh
Z25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2Vz
AFNDX2ViNTllMDQ5M2ZjNDQwYTI4ZGZjYmI5NjVkNzg3Yjk4LlByb3BlcnRpZXMuUmVzb3VyY2Vz
LnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19lYjU5ZTA0OTNmYzQ0MGEyOGRmY2JiOTY1ZDc4
N2I5OC5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbklu
ZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAENvbmNhdABPYmplY3QARW5kT2ZSb3dz
ZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9u
ZW50AGNvdW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZl
ci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93
AE5leHRSb3cAc2V0X3ZlbmRvcmtleQBnZXRfQXNzZW1ibHkAAAAAAANWAACAm0kAcwBOAHUAbABs
ACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYA
YQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABj
AG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwBlAGIA
NQA5AGUAMAA0ADkAMwBmAGMANAA0ADAAYQAyADgAZABmAGMAYgBiADkANgA1AGQANwA4ADcAYgA5
ADgALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAGvHWqIc3pFMvXSn
3khbeWQABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkDBwEOAyAADgUAAg4ODgkgAwESPR0IEkEF
IAIBCBwDIAACBiACAg4RdQUgAR0ICAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3elxWGTTgiQiJhF3N
gIDMkQIGCAMGEhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAQgAQECCSAEAQgOEj0SQQUgAQES
RQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAOAygAAgQIABJRBAgAElUECAASIAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfZWI1OWUwNDkz
ZmM0NDBhMjhkZmNiYjk2NWQ3ODdiOTgAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMwAASQEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVU
IEZyYW1ld29yayA0LjcEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5S
ZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFs
LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGlt
ZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAA4MQAAAAAAAAAAAABSMQAAACAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAARDEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAA
AAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AZQBiADUAOQBlADAANAA5ADMAZgBjADQANAAwAGEAMgA4AGQAZgBjAGIAYgA5ADYA
NQBkADcAOAA3AGIAOQA4AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBlAGIANQA5AGUA
MAA0ADkAMwBmAGMANAA0ADAAYQAyADgAZABmAGMAYgBiADkANgA1AGQANwA4ADcAYgA5ADgALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGUA
YgA1ADkAZQAwADQAOQAzAGYAYwA0ADQAMABhADIAOABkAGYAYwBiAGIAOQA2ADUAZAA3ADgANwBi
ADkAOAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBlAGIA
NQA5AGUAMAA0ADkAMwBmAGMANAA0ADAAYQAyADgAZABmAGMAYgBiADkANgA1AGQANwA4ADcAYgA5
ADgAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAGQxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_eb59e0493fc440a28dfcbb965d787b98</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">EE</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\DIM_Vendor\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\DIM_Vendor\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\DIM_Vendor\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\DIM_Vendor\Script Component.Outputs[Output 0].Columns[vendor_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\DIM_Vendor\Script Component.Outputs[Output 0].Columns[vendor_key]"
                      name="vendor_key" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\DIM_Vendor.Paths[Aggregate Output 1]"
              endId="Package\DIM_Vendor\Script Component.Inputs[Input 0]"
              name="Aggregate Output 1"
              startId="Package\DIM_Vendor\Aggregate.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\DIM_Vendor.Paths[Excel Source Output]"
              endId="Package\DIM_Vendor\Aggregate.Inputs[Aggregate Input 1]"
              name="Excel Source Output"
              startId="Package\DIM_Vendor\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\DIM_Vendor.Paths[Output 0]"
              endId="Package\DIM_Vendor\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\DIM_Vendor\Script Component.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\FACT_Amount"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{79B23284-6B91-4F77-A1F9-33715269B1FC}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="FACT_Amount"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\FACT_Amount\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\FACT_Amount\Aggregate.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Amount\Aggregate.Inputs[Aggregate Input 1].Columns[invoice_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="invoice_key"
                      lineageId="Package\FACT_Amount\Invoice.Outputs[Lookup Match Output].Columns[invoice_key]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Aggregate.Inputs[Aggregate Input 1].Columns[time_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="time_key"
                      lineageId="Package\FACT_Amount\Time.Outputs[Lookup Match Output].Columns[time_key]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Aggregate.Inputs[Aggregate Input 1].Columns[store_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="store_key"
                      lineageId="Package\FACT_Amount\Store.Outputs[Lookup Match Output].Columns[store_key]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Aggregate.Inputs[Aggregate Input 1].Columns[Copy of volume_sold_gallons]"
                      cachedDataType="numeric"
                      cachedName="Copy of volume_sold_gallons"
                      cachedPrecision="18"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of volume_sold_gallons]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Aggregate.Inputs[Aggregate Input 1].Columns[Copy of volume_sold_liters]"
                      cachedDataType="numeric"
                      cachedName="Copy of volume_sold_liters"
                      cachedPrecision="18"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of volume_sold_liters]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Aggregate.Inputs[Aggregate Input 1].Columns[Copy of bottles_sold]"
                      cachedDataType="i4"
                      cachedName="Copy of bottles_sold"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of bottles_sold]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[invoice_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[invoice_key]"
                      name="invoice_key">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Amount\Invoice.Outputs[Lookup Match Output].Columns[invoice_key]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[time_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[time_key]"
                      name="time_key">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Amount\Time.Outputs[Lookup Match Output].Columns[time_key]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[store_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[store_key]"
                      name="store_key">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Amount\Store.Outputs[Lookup Match Output].Columns[store_key]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[total_volume_sold_in_gallons]"
                      dataType="numeric"
                      lineageId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[total_volume_sold_in_gallons]"
                      name="total_volume_sold_in_gallons"
                      precision="18">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of volume_sold_gallons]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[total_volume_sold_in_liters]"
                      dataType="numeric"
                      lineageId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[total_volume_sold_in_liters]"
                      name="total_volume_sold_in_liters"
                      precision="18">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of volume_sold_liters]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[total_bottles_sold]"
                      dataType="i8"
                      lineageId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[total_bottles_sold]"
                      name="total_bottles_sold">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of bottles_sold]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Amount\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[date]"
                      cachedDataType="date"
                      cachedName="date"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[date]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[category]"
                      cachedDataType="r8"
                      cachedName="category"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[category]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[pack]"
                      cachedDataType="r8"
                      cachedName="pack"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[pack]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[category_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="category_name"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[category_name]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[item_number]"
                      cachedDataType="r8"
                      cachedName="item_number"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[item_number]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[item_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="item_description"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[item_description]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[bottle_volume_ml]"
                      cachedDataType="r8"
                      cachedName="bottle_volume_ml"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[state_bottle_cost]"
                      cachedDataType="r8"
                      cachedName="state_bottle_cost"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[state_bottle_retail]"
                      cachedDataType="r8"
                      cachedName="state_bottle_retail"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[vendor_number]"
                      cachedDataType="r8"
                      cachedName="vendor_number"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[vendor_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_name"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[invoice_and_item_number]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="invoice_and_item_number"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[bottles_sold]"
                      cachedDataType="r8"
                      cachedName="bottles_sold"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[sale_dollars]"
                      cachedDataType="r8"
                      cachedName="sale_dollars"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[volume_sold_liters]"
                      cachedDataType="r8"
                      cachedName="volume_sold_liters"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[volume_sold_gallons]"
                      cachedDataType="r8"
                      cachedName="volume_sold_gallons"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[store_number]"
                      cachedDataType="r8"
                      cachedName="store_number"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[store_number]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[store_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="store_name"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[store_name]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[address]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="address"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[address]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[city]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="city"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[city]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[zip_code]"
                      cachedDataType="r8"
                      cachedName="zip_code"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[zip_code]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[store_location]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="store_location"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[store_location]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[county_number]"
                      cachedDataType="r8"
                      cachedName="county_number"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[county_number]" />
                    <inputColumn
                      refId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input].Columns[county]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="county"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[county]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]"
                      name="Copy of date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[date]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of category]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of category]"
                      name="Copy of category"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[category]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of pack]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of pack]"
                      name="Copy of pack"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[pack]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of category_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of category_name]"
                      name="Copy of category_name"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[category_name]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of item_number]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of item_number]"
                      name="Copy of item_number"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[item_number]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of item_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of item_description]"
                      name="Copy of item_description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[item_description]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of bottle_volume_ml]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of bottle_volume_ml]"
                      name="Copy of bottle_volume_ml"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of state_bottle_cost]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of state_bottle_cost]"
                      name="Copy of state_bottle_cost"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of state_bottle_retail]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of state_bottle_retail]"
                      name="Copy of state_bottle_retail"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of vendor_number]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of vendor_number]"
                      name="Copy of vendor_number"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of vendor_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of vendor_name]"
                      name="Copy of vendor_name"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of invoice_and_item_number]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of invoice_and_item_number]"
                      name="Copy of invoice_and_item_number"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of bottles_sold]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of bottles_sold]"
                      name="Copy of bottles_sold"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of sale_dollars]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of sale_dollars]"
                      name="Copy of sale_dollars"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of volume_sold_liters]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of volume_sold_liters]"
                      name="Copy of volume_sold_liters"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of volume_sold_gallons]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of volume_sold_gallons]"
                      name="Copy of volume_sold_gallons"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_number]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_number]"
                      name="Copy of store_number"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[store_number]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_name]"
                      name="Copy of store_name"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[store_name]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of address]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of address]"
                      name="Copy of address"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[address]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of city]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of city]"
                      name="Copy of city"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[city]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of zip_code]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of zip_code]"
                      name="Copy of zip_code"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[zip_code]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_location]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_location]"
                      name="Copy of store_location"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[store_location]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of county_number]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of county_number]"
                      name="Copy of county_number"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[county_number]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of county]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of county]"
                      name="Copy of county"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[county]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Amount\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FACT_Amount\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Amount\Derived Column.Inputs[Derived Column Input].Columns[Copy of date]"
                      cachedDataType="date"
                      cachedName="Copy of date"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\FACT_Amount\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[date]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[date]"
                      name="date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DAY](#{Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DAY([Copy of date])</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[month]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[month]"
                      name="month"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[MONTH](#{Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">MONTH([Copy of date])</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[quarter]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[quarter]"
                      name="quarter"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("QQ",#{Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("QQ",[Copy of date])</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[year]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[year]"
                      name="year"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[YEAR](#{Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">YEAR([Copy of date])</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\FACT_Amount\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Amount\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Amount\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[invoice_and_item_number]"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]"
                      name="invoice_and_item_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[date]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[date]"
                      name="date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[store_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_number]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[store_number]"
                      name="store_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[store_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_name]"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[store_name]"
                      name="store_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[address]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[address]"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[address]"
                      name="address"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[city]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[city]"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[city]"
                      name="city"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[zip_code]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[zip_code]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[zip_code]"
                      name="zip_code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[store_location]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_location]"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[store_location]"
                      name="store_location"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[county_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[county_number]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[county_number]"
                      name="county_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[county]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[county]"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[county]"
                      name="county"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[category]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[category]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[category]"
                      name="category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[category_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[category_name]"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[category_name]"
                      name="category_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_number]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]"
                      name="vendor_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_name]"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]"
                      name="vendor_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[item_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_number]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[item_number]"
                      name="item_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[item_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_description]"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[item_description]"
                      name="item_description"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[pack]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[pack]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[pack]"
                      name="pack"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottle_volume_ml]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]"
                      name="bottle_volume_ml"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_cost]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]"
                      name="state_bottle_cost"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_retail]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]"
                      name="state_bottle_retail"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottles_sold]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]"
                      name="bottles_sold"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[sale_dollars]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]"
                      name="sale_dollars"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_liters]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]"
                      name="volume_sold_liters"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_gallons]"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]"
                      name="volume_sold_gallons"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      name="invoice_and_item_number" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[date]"
                      dataType="date"
                      name="date" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_number]"
                      dataType="r8"
                      name="store_number" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_name]"
                      dataType="wstr"
                      length="255"
                      name="store_name" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[address]"
                      dataType="wstr"
                      length="255"
                      name="address" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="255"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[zip_code]"
                      dataType="r8"
                      name="zip_code" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_location]"
                      dataType="wstr"
                      length="255"
                      name="store_location" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[county_number]"
                      dataType="r8"
                      name="county_number" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[county]"
                      dataType="wstr"
                      length="255"
                      name="county" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[category]"
                      dataType="r8"
                      name="category" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[category_name]"
                      dataType="wstr"
                      length="255"
                      name="category_name" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_number]"
                      dataType="r8"
                      name="vendor_number" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      name="vendor_name" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_number]"
                      dataType="r8"
                      name="item_number" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_description]"
                      dataType="wstr"
                      length="255"
                      name="item_description" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[pack]"
                      dataType="r8"
                      name="pack" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottle_volume_ml]"
                      dataType="r8"
                      name="bottle_volume_ml" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_cost]"
                      dataType="r8"
                      name="state_bottle_cost" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_retail]"
                      dataType="r8"
                      name="state_bottle_retail" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottles_sold]"
                      dataType="r8"
                      name="bottles_sold" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[sale_dollars]"
                      dataType="r8"
                      name="sale_dollars" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_liters]"
                      dataType="r8"
                      name="volume_sold_liters" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_gallons]"
                      dataType="r8"
                      name="volume_sold_gallons" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[invoice_and_item_number]"
                      name="invoice_and_item_number" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[date]"
                      dataType="date"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[date]"
                      name="date" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[store_number]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[store_number]"
                      name="store_number" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[store_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[store_name]"
                      name="store_name" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[address]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[address]"
                      name="address" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[city]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[city]"
                      name="city" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[zip_code]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[zip_code]"
                      name="zip_code" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[store_location]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[store_location]"
                      name="store_location" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[county_number]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[county_number]"
                      name="county_number" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[county]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[county]"
                      name="county" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[category]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[category]"
                      name="category" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[category_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[category_name]"
                      name="category_name" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_number]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_number]"
                      name="vendor_number" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_name]"
                      name="vendor_name" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[item_number]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[item_number]"
                      name="item_number" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[item_description]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[item_description]"
                      name="item_description" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[pack]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[pack]"
                      name="pack" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[bottle_volume_ml]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[bottle_volume_ml]"
                      name="bottle_volume_ml" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_cost]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_cost]"
                      name="state_bottle_cost" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_retail]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_retail]"
                      name="state_bottle_retail" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[bottles_sold]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[bottles_sold]"
                      name="bottles_sold" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[sale_dollars]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[sale_dollars]"
                      name="sale_dollars" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_liters]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_liters]"
                      name="volume_sold_liters" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_gallons]"
                      dataType="r8"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_gallons]"
                      name="volume_sold_gallons" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Amount\Invoice"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Invoice"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DIM_Invoice]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DIM_Invoice]) [refTable]
where [refTable].[invoice_and_item_number] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="invoice_and_item_number" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="sale_dollars" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="bottles_sold" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="volume_sold_liters" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="volume_sold_gallons" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="invoice_key" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of invoice_and_item_number]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Amount\Invoice.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FACT_Amount\Invoice.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Amount\Invoice.Inputs[Lookup Input].Columns[Copy of invoice_and_item_number]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of invoice_and_item_number"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of invoice_and_item_number]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">invoice_and_item_number</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Amount\Invoice.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FACT_Amount\Invoice.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\Invoice.Outputs[Lookup Match Output].Columns[invoice_key]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FACT_Amount\Invoice.Outputs[Lookup Match Output].Columns[invoice_key]"
                      name="invoice_key"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">invoice_key</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Amount\Invoice.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FACT_Amount\Invoice.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Amount\Invoice.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FACT_Amount\Invoice.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\Invoice.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\Invoice.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Amount\Invoice.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\Invoice.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Amount\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[FACT_Amount]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Amount\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[invoice_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="invoice_key"
                      externalMetadataColumnId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[invoice_key]"
                      lineageId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[invoice_key]" />
                    <inputColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[time_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="time_key"
                      externalMetadataColumnId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[time_key]"
                      lineageId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[time_key]" />
                    <inputColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[store_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="store_key"
                      externalMetadataColumnId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[store_key]"
                      lineageId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[store_key]" />
                    <inputColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[total_volume_sold_in_gallons]"
                      cachedDataType="numeric"
                      cachedName="total_volume_sold_in_gallons"
                      cachedPrecision="18"
                      externalMetadataColumnId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[total_volume_sold_in_gallons]"
                      lineageId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[total_volume_sold_in_gallons]" />
                    <inputColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[total_volume_sold_in_liters]"
                      cachedDataType="numeric"
                      cachedName="total_volume_sold_in_liters"
                      cachedPrecision="18"
                      externalMetadataColumnId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[total_volume_sold_in_liters]"
                      lineageId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[total_volume_sold_in_liters]" />
                    <inputColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[total_bottles_sold]"
                      cachedDataType="i8"
                      cachedName="total_bottles_sold"
                      externalMetadataColumnId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[total_bottles_sold]"
                      lineageId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1].Columns[total_bottles_sold]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[invoice_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="invoice_key" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[time_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="time_key" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[store_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="store_key" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[total_volume_sold_in_gallons]"
                      dataType="numeric"
                      name="total_volume_sold_in_gallons"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[total_volume_sold_in_liters]"
                      dataType="numeric"
                      name="total_volume_sold_in_liters"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[total_bottles_sold]"
                      dataType="i8"
                      name="total_bottles_sold" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Amount\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Amount\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Amount\Store"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Store"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DIM_Store]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DIM_Store]) [refTable]
where [refTable].[store_name] = ? and [refTable].[store_location] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="store_number" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="store_name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="store_location" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="store_key" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_name]};#{Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_location]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Amount\Store.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FACT_Amount\Store.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Amount\Store.Inputs[Lookup Input].Columns[Copy of store_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of store_name"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_name]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">store_name</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\FACT_Amount\Store.Inputs[Lookup Input].Columns[Copy of store_location]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of store_location"
                      lineageId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_location]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">store_location</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Amount\Store.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FACT_Amount\Store.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\Store.Outputs[Lookup Match Output].Columns[store_key]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FACT_Amount\Store.Outputs[Lookup Match Output].Columns[store_key]"
                      name="store_key"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">store_key</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Amount\Store.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FACT_Amount\Store.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Amount\Store.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FACT_Amount\Store.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\Store.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\Store.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Amount\Store.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\Store.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Amount\Time"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Time"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DIM_Time]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DIM_Time]) [refTable]
where [refTable].[month] = ? and [refTable].[quarter] = ? and [refTable].[year] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Aggregate.date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Copy of date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Derived Column.date" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="month" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="quarter" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="year" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="time_key" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[month]};#{Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[quarter]};#{Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[year]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Amount\Time.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FACT_Amount\Time.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Amount\Time.Inputs[Lookup Input].Columns[month]"
                      cachedDataType="i4"
                      cachedName="month"
                      lineageId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[month]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">month</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\FACT_Amount\Time.Inputs[Lookup Input].Columns[quarter]"
                      cachedDataType="i4"
                      cachedName="quarter"
                      lineageId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[quarter]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">quarter</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\FACT_Amount\Time.Inputs[Lookup Input].Columns[year]"
                      cachedDataType="i4"
                      cachedName="year"
                      lineageId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Output].Columns[year]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">year</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Amount\Time.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FACT_Amount\Time.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\Time.Outputs[Lookup Match Output].Columns[time_key]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FACT_Amount\Time.Outputs[Lookup Match Output].Columns[time_key]"
                      name="time_key"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">time_key</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Amount\Time.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FACT_Amount\Time.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Amount\Time.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FACT_Amount\Time.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Amount\Time.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\Time.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Amount\Time.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Amount\Time.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\FACT_Amount.Paths[Aggregate Output 1]"
              endId="Package\FACT_Amount\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Aggregate Output 1"
              startId="Package\FACT_Amount\Aggregate.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\FACT_Amount.Paths[Data Conversion Output]"
              endId="Package\FACT_Amount\Derived Column.Inputs[Derived Column Input]"
              name="Data Conversion Output"
              startId="Package\FACT_Amount\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\FACT_Amount.Paths[Derived Column Output]"
              endId="Package\FACT_Amount\Time.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\FACT_Amount\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\FACT_Amount.Paths[Excel Source Output]"
              endId="Package\FACT_Amount\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\FACT_Amount\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\FACT_Amount.Paths[Lookup Match Output]"
              endId="Package\FACT_Amount\Store.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\FACT_Amount\Invoice.Outputs[Lookup Match Output]" />
            <path
              refId="Package\FACT_Amount.Paths[Lookup Match Output1]"
              endId="Package\FACT_Amount\Invoice.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\FACT_Amount\Time.Outputs[Lookup Match Output]" />
            <path
              refId="Package\FACT_Amount.Paths[Lookup Match Output2]"
              endId="Package\FACT_Amount\Aggregate.Inputs[Aggregate Input 1]"
              name="Lookup Match Output"
              startId="Package\FACT_Amount\Store.Outputs[Lookup Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\FACT_Sale"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{32ABFDC2-7D72-47F4-B084-A89671360FDB}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="FACT_Sale"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\FACT_Sale\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\FACT_Sale\Aggregate.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Sale\Aggregate.Inputs[Aggregate Input 1].Columns[vendor_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="vendor_key"
                      lineageId="Package\FACT_Sale\Vendor.Outputs[Lookup Match Output].Columns[vendor_key]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Aggregate.Inputs[Aggregate Input 1].Columns[time_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="time_key"
                      lineageId="Package\FACT_Sale\Time.Outputs[Lookup Match Output].Columns[time_key]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Aggregate.Inputs[Aggregate Input 1].Columns[item_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="item_key"
                      lineageId="Package\FACT_Sale\Item.Outputs[Lookup Match Output].Columns[item_key]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Aggregate.Inputs[Aggregate Input 1].Columns[category_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="category_key"
                      lineageId="Package\FACT_Sale\Category.Outputs[Lookup Match Output].Columns[category_key]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Aggregate.Inputs[Aggregate Input 1].Columns[cost]"
                      cachedDataType="numeric"
                      cachedName="cost"
                      cachedPrecision="29"
                      lineageId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output].Columns[cost]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Aggregate.Inputs[Aggregate Input 1].Columns[revenue]"
                      cachedDataType="numeric"
                      cachedName="revenue"
                      cachedPrecision="18"
                      lineageId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output].Columns[revenue]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Aggregate.Inputs[Aggregate Input 1].Columns[profit]"
                      cachedDataType="numeric"
                      cachedName="profit"
                      cachedPrecision="30"
                      lineageId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output].Columns[profit]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Aggregate.Inputs[Aggregate Input 1].Columns[store_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="store_key"
                      lineageId="Package\FACT_Sale\Store.Outputs[Lookup Match Output].Columns[store_key]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Aggregate.Inputs[Aggregate Input 1].Columns[invoice_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="invoice_key"
                      lineageId="Package\FACT_Sale\Invoice.Outputs[Lookup Match Output].Columns[invoice_key]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Aggregate.Inputs[Aggregate Input 1].Columns[location_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="location_key"
                      lineageId="Package\FACT_Sale\Location.Outputs[Lookup Match Output].Columns[location_key]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[vendor_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[vendor_key]"
                      name="vendor_key">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Sale\Vendor.Outputs[Lookup Match Output].Columns[vendor_key]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[time_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[time_key]"
                      name="time_key">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Sale\Time.Outputs[Lookup Match Output].Columns[time_key]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[item_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[item_key]"
                      name="item_key">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Sale\Item.Outputs[Lookup Match Output].Columns[item_key]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[category_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[category_key]"
                      name="category_key">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Sale\Category.Outputs[Lookup Match Output].Columns[category_key]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[cost]"
                      dataType="numeric"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[cost]"
                      name="cost"
                      precision="29">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output].Columns[cost]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[revenue]"
                      dataType="numeric"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[revenue]"
                      name="revenue"
                      precision="18">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output].Columns[revenue]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[profit]"
                      dataType="numeric"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[profit]"
                      name="profit"
                      precision="30">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output].Columns[profit]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[store_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[store_key]"
                      name="store_key">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Sale\Store.Outputs[Lookup Match Output].Columns[store_key]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[invoice_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[invoice_key]"
                      name="invoice_key">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Sale\Invoice.Outputs[Lookup Match Output].Columns[invoice_key]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[location_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[location_key]"
                      name="location_key">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\FACT_Sale\Location.Outputs[Lookup Match Output].Columns[location_key]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Sale\Category"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Category"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DIM_Category]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DIM_Category]) [refTable]
where [refTable].[category_name] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="category" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="category_name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="pack" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="category_key" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of category_name]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Sale\Category.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FACT_Sale\Category.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Sale\Category.Inputs[Lookup Input].Columns[Copy of category_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of category_name"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of category_name]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">category_name</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Sale\Category.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FACT_Sale\Category.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Category.Outputs[Lookup Match Output].Columns[category_key]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FACT_Sale\Category.Outputs[Lookup Match Output].Columns[category_key]"
                      name="category_key"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">category_key</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Category.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FACT_Sale\Category.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Category.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FACT_Sale\Category.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Category.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Category.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Sale\Category.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Category.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Sale\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[date]"
                      cachedDataType="date"
                      cachedName="date"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[date]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[category]"
                      cachedDataType="r8"
                      cachedName="category"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[category]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[pack]"
                      cachedDataType="r8"
                      cachedName="pack"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[pack]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[category_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="category_name"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[category_name]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[item_number]"
                      cachedDataType="r8"
                      cachedName="item_number"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[item_number]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[item_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="item_description"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[item_description]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[bottle_volume_ml]"
                      cachedDataType="r8"
                      cachedName="bottle_volume_ml"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[state_bottle_cost]"
                      cachedDataType="r8"
                      cachedName="state_bottle_cost"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[state_bottle_retail]"
                      cachedDataType="r8"
                      cachedName="state_bottle_retail"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[vendor_number]"
                      cachedDataType="r8"
                      cachedName="vendor_number"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[vendor_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="vendor_name"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[invoice_and_item_number]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="invoice_and_item_number"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[bottles_sold]"
                      cachedDataType="r8"
                      cachedName="bottles_sold"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[sale_dollars]"
                      cachedDataType="r8"
                      cachedName="sale_dollars"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[volume_sold_liters]"
                      cachedDataType="r8"
                      cachedName="volume_sold_liters"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[volume_sold_gallons]"
                      cachedDataType="r8"
                      cachedName="volume_sold_gallons"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[store_number]"
                      cachedDataType="r8"
                      cachedName="store_number"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[store_number]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[store_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="store_name"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[store_name]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[address]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="address"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[address]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[city]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="city"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[city]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[zip_code]"
                      cachedDataType="r8"
                      cachedName="zip_code"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[zip_code]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[store_location]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="store_location"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[store_location]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[county_number]"
                      cachedDataType="r8"
                      cachedName="county_number"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[county_number]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input].Columns[county]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="county"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[county]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]"
                      name="Copy of date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[date]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of category]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of category]"
                      name="Copy of category"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[category]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of pack]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of pack]"
                      name="Copy of pack"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[pack]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of category_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of category_name]"
                      name="Copy of category_name"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[category_name]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of item_number]"
                      dataType="i8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of item_number]"
                      name="Copy of item_number"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[item_number]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of item_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of item_description]"
                      name="Copy of item_description"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[item_description]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of bottle_volume_ml]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of bottle_volume_ml]"
                      name="Copy of bottle_volume_ml"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of state_bottle_cost]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of state_bottle_cost]"
                      name="Copy of state_bottle_cost"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of state_bottle_retail]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of state_bottle_retail]"
                      name="Copy of state_bottle_retail"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of vendor_number]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of vendor_number]"
                      name="Copy of vendor_number"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of vendor_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of vendor_name]"
                      name="Copy of vendor_name"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of invoice_and_item_number]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of invoice_and_item_number]"
                      name="Copy of invoice_and_item_number"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of bottles_sold]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of bottles_sold]"
                      name="Copy of bottles_sold"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of sale_dollars]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of sale_dollars]"
                      name="Copy of sale_dollars"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of volume_sold_liters]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of volume_sold_liters]"
                      name="Copy of volume_sold_liters"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of volume_sold_gallons]"
                      dataType="numeric"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of volume_sold_gallons]"
                      name="Copy of volume_sold_gallons"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_number]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_number]"
                      name="Copy of store_number"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[store_number]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_name]"
                      name="Copy of store_name"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[store_name]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of address]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of address]"
                      name="Copy of address"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[address]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of city]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of city]"
                      name="Copy of city"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[city]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of zip_code]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of zip_code]"
                      name="Copy of zip_code"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[zip_code]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_location]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_location]"
                      name="Copy of store_location"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[store_location]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of county_number]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of county_number]"
                      name="Copy of county_number"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[county_number]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of county]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="255"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of county]"
                      name="Copy of county"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[county]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Sale\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FACT_Sale\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Sale\Derived Column.Inputs[Derived Column Input].Columns[Copy of date]"
                      cachedDataType="date"
                      cachedName="Copy of date"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\FACT_Sale\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[date]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[date]"
                      name="date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DAY](#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DAY([Copy of date])</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[month]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[month]"
                      name="month"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[MONTH](#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">MONTH([Copy of date])</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[quarter]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[quarter]"
                      name="quarter"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[DATEPART]("QQ",#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">DATEPART("QQ",[Copy of date])</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[year]"
                      dataType="i4"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[year]"
                      name="year"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">[YEAR](#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of date]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">YEAR([Copy of date])</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\FACT_Sale\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Sale\Derived Column 1"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column 1"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\FACT_Sale\Derived Column 1.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Sale\Derived Column 1.Inputs[Derived Column Input].Columns[Copy of state_bottle_cost]"
                      cachedDataType="numeric"
                      cachedName="Copy of state_bottle_cost"
                      cachedPrecision="18"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of state_bottle_cost]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Derived Column 1.Inputs[Derived Column Input].Columns[Copy of bottles_sold]"
                      cachedDataType="i4"
                      cachedName="Copy of bottles_sold"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of bottles_sold]" />
                    <inputColumn
                      refId="Package\FACT_Sale\Derived Column 1.Inputs[Derived Column Input].Columns[Copy of sale_dollars]"
                      cachedDataType="numeric"
                      cachedName="Copy of sale_dollars"
                      cachedPrecision="18"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of sale_dollars]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\FACT_Sale\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output].Columns[cost]"
                      dataType="numeric"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output].Columns[cost]"
                      name="cost"
                      precision="29"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of state_bottle_cost]} * #{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of bottles_sold]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">[Copy of state_bottle_cost] * [Copy of bottles_sold]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output].Columns[revenue]"
                      dataType="numeric"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output].Columns[revenue]"
                      name="revenue"
                      precision="18"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of sale_dollars]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">[Copy of sale_dollars]</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output].Columns[profit]"
                      dataType="numeric"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output].Columns[profit]"
                      name="profit"
                      precision="30"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of sale_dollars]} - (#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of state_bottle_cost]} * #{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of bottles_sold]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">[Copy of sale_dollars] - ([Copy of state_bottle_cost] * [Copy of bottles_sold])</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\FACT_Sale\Derived Column 1.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Sale\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sheet1$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Sale\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[invoice_and_item_number]"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[invoice_and_item_number]"
                      name="invoice_and_item_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[date]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[date]"
                      name="date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[store_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_number]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[store_number]"
                      name="store_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[store_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_name]"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[store_name]"
                      name="store_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[address]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[address]"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[address]"
                      name="address"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[city]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[city]"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[city]"
                      name="city"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[zip_code]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[zip_code]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[zip_code]"
                      name="zip_code"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[store_location]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_location]"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[store_location]"
                      name="store_location"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[county_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[county_number]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[county_number]"
                      name="county_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[county]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[county]"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[county]"
                      name="county"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[category]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[category]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[category]"
                      name="category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[category_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[category_name]"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[category_name]"
                      name="category_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_number]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[vendor_number]"
                      name="vendor_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_name]"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[vendor_name]"
                      name="vendor_name"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[item_number]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_number]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[item_number]"
                      name="item_number"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[item_description]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_description]"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[item_description]"
                      name="item_description"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[pack]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[pack]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[pack]"
                      name="pack"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottle_volume_ml]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[bottle_volume_ml]"
                      name="bottle_volume_ml"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_cost]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_cost]"
                      name="state_bottle_cost"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_retail]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[state_bottle_retail]"
                      name="state_bottle_retail"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottles_sold]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[bottles_sold]"
                      name="bottles_sold"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[sale_dollars]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[sale_dollars]"
                      name="sale_dollars"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_liters]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_liters]"
                      name="volume_sold_liters"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_gallons]"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[volume_sold_gallons]"
                      name="volume_sold_gallons"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      name="invoice_and_item_number" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[date]"
                      dataType="date"
                      name="date" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_number]"
                      dataType="r8"
                      name="store_number" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_name]"
                      dataType="wstr"
                      length="255"
                      name="store_name" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[address]"
                      dataType="wstr"
                      length="255"
                      name="address" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[city]"
                      dataType="wstr"
                      length="255"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[zip_code]"
                      dataType="r8"
                      name="zip_code" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[store_location]"
                      dataType="wstr"
                      length="255"
                      name="store_location" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[county_number]"
                      dataType="r8"
                      name="county_number" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[county]"
                      dataType="wstr"
                      length="255"
                      name="county" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[category]"
                      dataType="r8"
                      name="category" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[category_name]"
                      dataType="wstr"
                      length="255"
                      name="category_name" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_number]"
                      dataType="r8"
                      name="vendor_number" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      name="vendor_name" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_number]"
                      dataType="r8"
                      name="item_number" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[item_description]"
                      dataType="wstr"
                      length="255"
                      name="item_description" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[pack]"
                      dataType="r8"
                      name="pack" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottle_volume_ml]"
                      dataType="r8"
                      name="bottle_volume_ml" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_cost]"
                      dataType="r8"
                      name="state_bottle_cost" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[state_bottle_retail]"
                      dataType="r8"
                      name="state_bottle_retail" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[bottles_sold]"
                      dataType="r8"
                      name="bottles_sold" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[sale_dollars]"
                      dataType="r8"
                      name="sale_dollars" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_liters]"
                      dataType="r8"
                      name="volume_sold_liters" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].ExternalColumns[volume_sold_gallons]"
                      dataType="r8"
                      name="volume_sold_gallons" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[invoice_and_item_number]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[invoice_and_item_number]"
                      name="invoice_and_item_number" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[date]"
                      dataType="date"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[date]"
                      name="date" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[store_number]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[store_number]"
                      name="store_number" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[store_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[store_name]"
                      name="store_name" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[address]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[address]"
                      name="address" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[city]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[city]"
                      name="city" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[zip_code]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[zip_code]"
                      name="zip_code" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[store_location]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[store_location]"
                      name="store_location" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[county_number]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[county_number]"
                      name="county_number" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[county]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[county]"
                      name="county" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[category]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[category]"
                      name="category" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[category_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[category_name]"
                      name="category_name" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_number]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_number]"
                      name="vendor_number" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[vendor_name]"
                      name="vendor_name" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[item_number]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[item_number]"
                      name="item_number" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[item_description]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[item_description]"
                      name="item_description" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[pack]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[pack]"
                      name="pack" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[bottle_volume_ml]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[bottle_volume_ml]"
                      name="bottle_volume_ml" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_cost]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_cost]"
                      name="state_bottle_cost" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_retail]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[state_bottle_retail]"
                      name="state_bottle_retail" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[bottles_sold]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[bottles_sold]"
                      name="bottles_sold" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[sale_dollars]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[sale_dollars]"
                      name="sale_dollars" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_liters]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_liters]"
                      name="volume_sold_liters" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_gallons]"
                      dataType="r8"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[volume_sold_gallons]"
                      name="volume_sold_gallons" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Sale\Invoice"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Invoice"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DIM_Invoice]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DIM_Invoice]) [refTable]
where [refTable].[invoice_and_item_number] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="invoice_and_item_number" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="sale_dollars" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="bottles_sold" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="volume_sold_liters" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="volume_sold_gallons" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="invoice_key" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of invoice_and_item_number]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Sale\Invoice.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FACT_Sale\Invoice.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Sale\Invoice.Inputs[Lookup Input].Columns[Copy of invoice_and_item_number]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of invoice_and_item_number"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of invoice_and_item_number]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">invoice_and_item_number</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Sale\Invoice.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FACT_Sale\Invoice.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Invoice.Outputs[Lookup Match Output].Columns[invoice_key]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FACT_Sale\Invoice.Outputs[Lookup Match Output].Columns[invoice_key]"
                      name="invoice_key"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">invoice_key</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Invoice.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FACT_Sale\Invoice.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Invoice.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FACT_Sale\Invoice.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Invoice.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Invoice.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Sale\Invoice.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Invoice.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Sale\Item"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Item"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DIM_Item]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DIM_Item]) [refTable]
where [refTable].[item_description] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="item_number" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="item_description" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="bottle_volume_ml" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="state_bottle_cost" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="state_bottle_retail" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="item_key" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of item_description]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Sale\Item.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FACT_Sale\Item.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Sale\Item.Inputs[Lookup Input].Columns[Copy of item_description]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of item_description"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of item_description]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">item_description</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Sale\Item.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FACT_Sale\Item.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Item.Outputs[Lookup Match Output].Columns[item_key]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FACT_Sale\Item.Outputs[Lookup Match Output].Columns[item_key]"
                      name="item_key"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">item_key</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Item.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FACT_Sale\Item.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Item.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FACT_Sale\Item.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Item.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Item.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Sale\Item.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Item.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Sale\Location"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Location"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DIM_Location]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DIM_Location]) [refTable]
where [refTable].[address] = ? and [refTable].[city] = ? and [refTable].[county] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="city" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="county" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="address" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="zip_code" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="county_number" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="location_key" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[address]};#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[city]};#{Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[county]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Sale\Location.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FACT_Sale\Location.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Sale\Location.Inputs[Lookup Input].Columns[address]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="address"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[address]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">address</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\FACT_Sale\Location.Inputs[Lookup Input].Columns[city]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="city"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[city]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">city</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\FACT_Sale\Location.Inputs[Lookup Input].Columns[county]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="county"
                      lineageId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output].Columns[county]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">county</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Sale\Location.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FACT_Sale\Location.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Location.Outputs[Lookup Match Output].Columns[location_key]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FACT_Sale\Location.Outputs[Lookup Match Output].Columns[location_key]"
                      name="location_key"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">location_key</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Location.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FACT_Sale\Location.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Location.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FACT_Sale\Location.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Location.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Location.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Sale\Location.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Location.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Sale\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[FACT_Sales]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Sale\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[vendor_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="vendor_key"
                      externalMetadataColumnId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[vendor_key]"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[vendor_key]" />
                    <inputColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[time_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="time_key"
                      externalMetadataColumnId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[time_key]"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[time_key]" />
                    <inputColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[item_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="item_key"
                      externalMetadataColumnId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[item_key]"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[item_key]" />
                    <inputColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[category_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="category_key"
                      externalMetadataColumnId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category_key]"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[category_key]" />
                    <inputColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[cost]"
                      cachedDataType="numeric"
                      cachedName="cost"
                      cachedPrecision="29"
                      externalMetadataColumnId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[cost]"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[cost]" />
                    <inputColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[profit]"
                      cachedDataType="numeric"
                      cachedName="profit"
                      cachedPrecision="30"
                      externalMetadataColumnId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[profit]"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[profit]" />
                    <inputColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[store_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="store_key"
                      externalMetadataColumnId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[store_key]"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[store_key]" />
                    <inputColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[invoice_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="invoice_key"
                      externalMetadataColumnId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[invoice_key]"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[invoice_key]" />
                    <inputColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[revenue]"
                      cachedDataType="numeric"
                      cachedName="revenue"
                      cachedPrecision="18"
                      externalMetadataColumnId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[revenue]"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[revenue]" />
                    <inputColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[location_key]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="location_key"
                      externalMetadataColumnId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[location_key]"
                      lineageId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1].Columns[location_key]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[vendor_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="vendor_key" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[time_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="time_key" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[item_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="item_key" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[category_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="category_key" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[cost]"
                      dataType="numeric"
                      name="cost"
                      precision="29" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[revenue]"
                      dataType="numeric"
                      name="revenue"
                      precision="18" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[profit]"
                      dataType="numeric"
                      name="profit"
                      precision="30" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[store_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="store_key" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[invoice_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="invoice_key" />
                    <externalMetadataColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[location_key]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="location_key" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Sale\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Sale\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Sale\Store"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Store"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DIM_Store]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DIM_Store]) [refTable]
where [refTable].[store_name] = ? and [refTable].[store_location] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="store_number" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="store_name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="store_location" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="store_key" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_name]};#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_location]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Sale\Store.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FACT_Sale\Store.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Sale\Store.Inputs[Lookup Input].Columns[Copy of store_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of store_name"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_name]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">store_name</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\FACT_Sale\Store.Inputs[Lookup Input].Columns[Copy of store_location]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of store_location"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of store_location]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">store_location</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Sale\Store.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FACT_Sale\Store.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Store.Outputs[Lookup Match Output].Columns[store_key]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FACT_Sale\Store.Outputs[Lookup Match Output].Columns[store_key]"
                      name="store_key"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">store_key</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Store.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FACT_Sale\Store.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Store.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FACT_Sale\Store.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Store.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Store.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Sale\Store.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Store.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Sale\Time"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Time"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DIM_Time]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DIM_Time]) [refTable]
where [refTable].[month] = ? and [refTable].[quarter] = ? and [refTable].[year] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="date" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="month" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="quarter" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="year" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="time_key" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[month]};#{Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[quarter]};#{Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[year]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Sale\Time.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FACT_Sale\Time.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Sale\Time.Inputs[Lookup Input].Columns[month]"
                      cachedDataType="i4"
                      cachedName="month"
                      lineageId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[month]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">month</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\FACT_Sale\Time.Inputs[Lookup Input].Columns[quarter]"
                      cachedDataType="i4"
                      cachedName="quarter"
                      lineageId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[quarter]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">quarter</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\FACT_Sale\Time.Inputs[Lookup Input].Columns[year]"
                      cachedDataType="i4"
                      cachedName="year"
                      lineageId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Output].Columns[year]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">year</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Sale\Time.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FACT_Sale\Time.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Time.Outputs[Lookup Match Output].Columns[time_key]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FACT_Sale\Time.Outputs[Lookup Match Output].Columns[time_key]"
                      name="time_key"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">time_key</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Time.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FACT_Sale\Time.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Time.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FACT_Sale\Time.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Time.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Time.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Sale\Time.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Time.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\FACT_Sale\Vendor"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Vendor"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[DIM_Vendor]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[DIM_Vendor]) [refTable]
where [refTable].[vendor_name] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="vendor_name" dataType="DT_WSTR" length="255" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="vendor_number" dataType="DT_R8" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="vendor_key" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of vendor_name]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">65001</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\FACT_Sale\Vendor.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[SQL Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[SQL Connection Manager]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\FACT_Sale\Vendor.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\FACT_Sale\Vendor.Inputs[Lookup Input].Columns[Copy of vendor_name]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Copy of vendor_name"
                      lineageId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of vendor_name]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">vendor_name</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\FACT_Sale\Vendor.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\FACT_Sale\Vendor.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Vendor.Outputs[Lookup Match Output].Columns[vendor_key]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="50"
                      lineageId="Package\FACT_Sale\Vendor.Outputs[Lookup Match Output].Columns[vendor_key]"
                      name="vendor_key"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">vendor_key</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Vendor.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\FACT_Sale\Vendor.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\FACT_Sale\Vendor.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\FACT_Sale\Vendor.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\FACT_Sale\Vendor.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Vendor.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\FACT_Sale\Vendor.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\FACT_Sale\Vendor.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\FACT_Sale.Paths[Aggregate Output 1]"
              endId="Package\FACT_Sale\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Aggregate Output 1"
              startId="Package\FACT_Sale\Aggregate.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\FACT_Sale.Paths[Data Conversion Output]"
              endId="Package\FACT_Sale\Derived Column.Inputs[Derived Column Input]"
              name="Data Conversion Output"
              startId="Package\FACT_Sale\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\FACT_Sale.Paths[Derived Column Output]"
              endId="Package\FACT_Sale\Aggregate.Inputs[Aggregate Input 1]"
              name="Derived Column Output"
              startId="Package\FACT_Sale\Derived Column 1.Outputs[Derived Column Output]" />
            <path
              refId="Package\FACT_Sale.Paths[Derived Column Output1]"
              endId="Package\FACT_Sale\Vendor.Inputs[Lookup Input]"
              name="Derived Column Output"
              startId="Package\FACT_Sale\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\FACT_Sale.Paths[Excel Source Output]"
              endId="Package\FACT_Sale\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\FACT_Sale\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\FACT_Sale.Paths[Lookup Match Output]"
              endId="Package\FACT_Sale\Item.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\FACT_Sale\Category.Outputs[Lookup Match Output]" />
            <path
              refId="Package\FACT_Sale.Paths[Lookup Match Output1]"
              endId="Package\FACT_Sale\Invoice.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\FACT_Sale\Item.Outputs[Lookup Match Output]" />
            <path
              refId="Package\FACT_Sale.Paths[Lookup Match Output2]"
              endId="Package\FACT_Sale\Category.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\FACT_Sale\Store.Outputs[Lookup Match Output]" />
            <path
              refId="Package\FACT_Sale.Paths[Lookup Match Output3]"
              endId="Package\FACT_Sale\Store.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\FACT_Sale\Vendor.Outputs[Lookup Match Output]" />
            <path
              refId="Package\FACT_Sale.Paths[Lookup Match Output4]"
              endId="Package\FACT_Sale\Derived Column 1.Inputs[Derived Column Input]"
              name="Lookup Match Output"
              startId="Package\FACT_Sale\Time.Outputs[Lookup Match Output]" />
            <path
              refId="Package\FACT_Sale.Paths[Lookup Match Output5]"
              endId="Package\FACT_Sale\Location.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\FACT_Sale\Invoice.Outputs[Lookup Match Output]" />
            <path
              refId="Package\FACT_Sale.Paths[Lookup Match Output6]"
              endId="Package\FACT_Sale\Time.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\FACT_Sale\Location.Outputs[Lookup Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{12E6D70F-3C52-431C-B73B-4E871E6AA7C1}"
      DTS:From="Package\DIM_Item"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\DIM_Invoice" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{C4AA0C15-D810-4F53-9FFE-23FC657996FD}"
      DTS:From="Package\DIM_Vendor"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\DIM_Store" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{040F4E39-2764-4214-900A-DB633B4A4CE1}"
      DTS:From="Package\DIM_Invoice"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\DIM_Location" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 3]"
      DTS:CreationName=""
      DTS:DTSID="{C70E43B5-AFB5-4523-8F9D-24E688411204}"
      DTS:From="Package\DIM_Location"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 3"
      DTS:To="Package\DIM_Time" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 4]"
      DTS:CreationName=""
      DTS:DTSID="{6B4F85F2-05D9-453B-AE89-308FBA743C5B}"
      DTS:From="Package\DIM_Time"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 4"
      DTS:To="Package\FACT_Sale" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 5]"
      DTS:CreationName=""
      DTS:DTSID="{C5E1BF05-8F26-46C2-A8E9-2E30D56241C3}"
      DTS:From="Package\DIM_Time"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 5"
      DTS:To="Package\FACT_Amount" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 6]"
      DTS:CreationName=""
      DTS:DTSID="{44C64FE6-5D90-4BCE-B0D6-B3A7B79D9445}"
      DTS:From="Package\DIM_Store"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 6"
      DTS:To="Package\DIM_Category" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{75D7F3D5-E100-4CDA-B473-2FE50013F3FF}"
      DTS:From="Package\DIM_Category"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\DIM_Item" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="145.6,41.6"
          Id="Package\DIM_Category"
          TopLeft="459.107147506534,99.9852948048665" />
        <NodeLayout
          Size="137.6,41.6"
          Id="Package\DIM_Invoice"
          TopLeft="321.428576668306,205.705882913308" />
        <NodeLayout
          Size="125.6,41.6"
          Id="Package\DIM_Item"
          TopLeft="205.714282554632,97.882352069124" />
        <NodeLayout
          Size="143.2,41.6"
          Id="Package\DIM_Location"
          TopLeft="318.571433996668,287.529415797198" />
        <NodeLayout
          Size="128.8,41.6"
          Id="Package\DIM_Store"
          TopLeft="470.000007674099,23.7058820131019" />
        <NodeLayout
          Size="127.2,41.6"
          Id="Package\DIM_Time"
          TopLeft="327.857145194194,364.352943952159" />
        <NodeLayout
          Size="147.2,41.6"
          Id="Package\DIM_Vendor"
          TopLeft="205.71428281008,25.9999995555947" />
        <NodeLayout
          Size="145.6,41.6"
          Id="Package\FACT_Amount"
          TopLeft="447.857146066975,417.882354644394" />
        <NodeLayout
          Size="128.8,41.6"
          Id="Package\FACT_Sale"
          TopLeft="213.57143192115,422.470590094019" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="268.514282554632,139.482352069124">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="121.714294113674,66.223530844184"
              Start="0,0"
              End="121.714294113674,58.723530844184">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.111765422092" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.111765422092"
                    Point2="0,33.111765422092"
                    Point3="4,33.111765422092" />
                  <mssgle:LineSegment
                    End="117.714294113674,33.111765422092" />
                  <mssgle:CubicBezierSegment
                    Point1="117.714294113674,33.111765422092"
                    Point2="121.714294113674,33.111765422092"
                    Point3="121.714294113674,37.111765422092" />
                  <mssgle:LineSegment
                    End="121.714294113674,58.723530844184" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="352.91428281008,45.6529407843483">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="117.085724864019,0"
              Start="0,0"
              End="109.585724864019,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="109.585724864019,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="390.200005332487,247.305882913308">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.22353288389"
              Start="0,0"
              End="0,32.72353288389">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.72353288389" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 3]"
          TopLeft="390.814289595431,329.129415797198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.2235281549612"
              Start="0,0"
              End="0,27.7235281549612">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.7235281549612" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 4]"
          TopLeft="327.857145194194,385.152943952159">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-49.885713273044,37.3176461418601"
              Start="0,0"
              End="-49.885713273044,29.8176461418601">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-45.885713273044,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-45.885713273044,0"
                    Point2="-49.885713273044,0"
                    Point3="-49.885713273044,4" />
                  <mssgle:LineSegment
                    End="-49.885713273044,29.8176461418601" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 5]"
          TopLeft="455.057145194194,385.152943952159">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65.6000008727818,32.7294106922348"
              Start="0,0"
              End="65.6000008727818,25.2294106922348">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="61.6000008727818,0" />
                  <mssgle:CubicBezierSegment
                    Point1="61.6000008727818,0"
                    Point2="65.6000008727818,0"
                    Point3="65.6000008727818,4" />
                  <mssgle:LineSegment
                    End="65.6000008727818,25.2294106922348" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 6]"
          TopLeft="533.153577590316,65.3058820131019">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.6794127917646"
              Start="0,0"
              End="0,27.1794127917646">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.1794127917646" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="459.107147506534,116.933823436995">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-127.792864951902,0"
              Start="0,0"
              End="-120.292864951902,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-120.292864951902,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\DIM_Category">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\DIM_Category\Script Component"
          TopLeft="323.809524498829,202.352941018579" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\DIM_Category\OLE DB Destination"
          TopLeft="324.428563553156,283.156858275489" />
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\DIM_Category\Excel Source"
          TopLeft="339.460312699312,46.5359457081802" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\DIM_Category\Aggregate"
          TopLeft="341.698407822962,127.18953914651" />
        <EdgeLayout
          Id="Package\DIM_Category.Paths[Aggregate Output 1]"
          TopLeft="404.953966160896,168.78953914651">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.5634018720685"
              Start="0,0"
              End="0,26.0634018720685">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.0634018720685" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Category.Paths[Output 0]"
          TopLeft="407.319044025993,243.952941018579">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.2039172569102"
              Start="0,0"
              End="0,31.7039172569102">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7039172569102" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Category.Paths[Excel Source Output]"
          TopLeft="406.779360261137,88.1359457081802">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.0535934383303"
              Start="0,0"
              End="0,31.5535934383303">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5535934383303" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Category\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Category\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\DIM_Invoice">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\DIM_Invoice\Script Component"
          TopLeft="289.615380299779,178.07692042337" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\DIM_Invoice\OLE DB Destination"
          TopLeft="289.230764920895,261.538457641235" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\DIM_Invoice\Aggregate"
          TopLeft="306.153841591798,103.076921540957" />
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\DIM_Invoice\Excel Source"
          TopLeft="296.384610968141,34.230768720691" />
        <EdgeLayout
          Id="Package\DIM_Invoice.Paths[Excel Source Output]"
          TopLeft="367.469226279969,75.830768720691">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.2461528202661"
              Start="0,0"
              End="0,19.7461528202661">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7461528202661" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Invoice.Paths[Aggregate Output 1]"
          TopLeft="370.084610945788,144.676921540957">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.3999988824131"
              Start="0,0"
              End="0,25.8999988824131">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.8999988824131" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Invoice.Paths[Output 0]"
          TopLeft="372.623072610337,219.67692042337">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.8615372178649"
              Start="0,0"
              End="0,34.3615372178649">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.3615372178649" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Invoice\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Invoice\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\DIM_Item">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\DIM_Item\Script Component"
          TopLeft="311.666662022472,195.833330415189" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\DIM_Item\OLE DB Destination"
          TopLeft="312.499995343387,278.333329185843" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\DIM_Item\Aggregate"
          TopLeft="334.999995008111,119.166664890945" />
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\DIM_Item\Excel Source"
          TopLeft="321.499995209277,53.666665866971" />
        <EdgeLayout
          Id="Package\DIM_Item.Paths[Excel Source Output]"
          TopLeft="394.449995108694,95.266665866971">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.899999023974"
              Start="0,0"
              End="0,16.399999023974">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.399999023974" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Item.Paths[Aggregate Output 1]"
          TopLeft="395.533328515291,160.766664890945">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.0666655242444"
              Start="0,0"
              End="0,27.5666655242444">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.5666655242444" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Item.Paths[Output 0]"
          TopLeft="395.283328682929,237.433330415189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.899998770654"
              Start="0,0"
              End="0,33.399998770654">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.399998770654" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Item\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Item\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\DIM_Location">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\DIM_Location\Script Component"
          TopLeft="450.904753327877,212.985615907905" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\DIM_Location\OLE DB Destination"
          TopLeft="451.619039054327,292.620912567309" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\DIM_Location\Aggregate"
          TopLeft="468.888883324133,136.65359343833" />
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\DIM_Location\Excel Source"
          TopLeft="466.650788200483,56" />
        <EdgeLayout
          Id="Package\DIM_Location.Paths[Excel Source Output]"
          TopLeft="533.969835762308,97.6">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.0535934383298"
              Start="0,0"
              End="0,31.5535934383298">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.5535934383298" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Location.Paths[Aggregate Output 1]"
          TopLeft="532.096818326005,178.25359343833">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.7320224695753"
              Start="0,0"
              End="0,27.2320224695753">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.2320224695753" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Location.Paths[Output 0]"
          TopLeft="534.461896191102,254.585615907905">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.035296659404"
              Start="0,0"
              End="0,30.535296659404">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.535296659404" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Location\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Location\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\DIM_Store">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\DIM_Store\OLE DB Destination"
          TopLeft="326.428566564407,281.428567234959" />
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\DIM_Store\Excel Source"
          TopLeft="337.428566412658,41.63025134108" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\DIM_Store\Aggregate"
          TopLeft="345.714280562742,131.71428375159" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\DIM_Store\Script Component"
          TopLeft="330.714280786259,208.571425463472" />
        <EdgeLayout
          Id="Package\DIM_Store.Paths[Output 0]"
          TopLeft="411.771423675333,250.171425463472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.257141771487"
              Start="0,0"
              End="0,23.757141771487">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.757141771487" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Store.Paths[Excel Source Output]"
          TopLeft="407.7714234877,83.23025134108">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.48403241051"
              Start="0,0"
              End="0,40.98403241051">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.98403241051" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Store.Paths[Aggregate Output 1]"
          TopLeft="410.4142806745,173.31428375159">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,35.2571417118823"
              Start="0,0"
              End="0,27.7571417118823">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.7571417118823" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Store\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Store\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\DIM_Time">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\DIM_Time\Excel Source"
          TopLeft="88.6153832949125,102.846152313627" />
        <NodeLayout
          Size="155.2,41.6"
          Id="Package\DIM_Time\Data Conversion"
          TopLeft="553.230760977818,103.69230647729" />
        <NodeLayout
          Size="152.8,42.4"
          Id="Package\DIM_Time\Derived Column"
          TopLeft="557.692299382045,202.307689293073" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\DIM_Time\Script Component"
          TopLeft="284.615380374285,201.538458535304" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\DIM_Time\Aggregate"
          TopLeft="323.84614902047,100.769229267652" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\DIM_Time\OLE DB Destination"
          TopLeft="59.9999991059303,203.846150808609" />
        <EdgeLayout
          Id="Package\DIM_Time.Paths[Output 0]"
          TopLeft="284.615380374285,223.492304671957">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-54.2153812683547,0"
              Start="0,0"
              End="-46.7153812683547,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-46.7153812683547,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Time.Paths[Excel Source Output]"
          TopLeft="227.015383294913,122.607690790639">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="96.8307657255575,0"
              Start="0,0"
              End="89.3307657255575,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="89.3307657255575,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Time.Paths[Derived Column Output]"
          TopLeft="557.692299382045,222.923073914188">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-110.67691900776,0"
              Start="0,0"
              End="-103.17691900776,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-103.17691900776,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Time.Paths[Data Conversion Output]"
          TopLeft="632.461530179931,145.29230647729">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57.0153828157827"
              Start="0,0"
              End="0,49.5153828157827">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5153828157827" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Time.Paths[Aggregate Output 1]"
          TopLeft="450.24614902047,123.030767872471">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="102.984611957348,0"
              Start="0,0"
              End="95.484611957348,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="95.484611957348,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Time\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Time\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\DIM_Vendor">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\DIM_Vendor\OLE DB Destination"
          TopLeft="378.99999435246,319.999995231629" />
        <NodeLayout
          Size="138.4,41.6"
          Id="Package\DIM_Vendor\Excel Source"
          TopLeft="391.999994158745,87.9999986886978" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\DIM_Vendor\Aggregate"
          TopLeft="399.999994039535,161.999997586012" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\DIM_Vendor\Script Component"
          TopLeft="385.499994337559,236.499996557832" />
        <EdgeLayout
          Id="Package\DIM_Vendor.Paths[Output 0]"
          TopLeft="465.449994345009,278.099996557832">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41.8999986737967"
              Start="0,0"
              End="0,34.3999986737967">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.3999986737967" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Vendor.Paths[Excel Source Output]"
          TopLeft="462.19999409914,129.599998688698">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.3999988973139"
              Start="0,0"
              End="0,24.8999988973139">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.8999988973139" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\DIM_Vendor.Paths[Aggregate Output 1]"
          TopLeft="464.949994188547,203.599997586012">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.89999897182"
              Start="0,0"
              End="0,25.39999897182">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.39999897182" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Vendor\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\DIM_Vendor\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\FACT_Amount">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\FACT_Amount\Invoice"
          TopLeft="701.999990433455,162.09230685876" />
        <NodeLayout
          Size="155.2,41.6"
          Id="Package\FACT_Amount\Data Conversion"
          TopLeft="244.923073553122,61.9384615095764" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\FACT_Amount\Derived Column"
          TopLeft="472.61537785255,63.476923025113" />
        <NodeLayout
          Size="138.4,43.2"
          Id="Package\FACT_Amount\Excel Source"
          TopLeft="60.4615378402747,60" />
        <NodeLayout
          Size="103.2,41.6"
          Id="Package\FACT_Amount\Store"
          TopLeft="488.461532076964,163.86153717981" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\FACT_Amount\OLE DB Destination"
          TopLeft="42.2857093114629,167.999995604158" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\FACT_Amount\Aggregate"
          TopLeft="259.999996125698,169.999997466803" />
        <NodeLayout
          Size="101.6,41.6"
          Id="Package\FACT_Amount\Time"
          TopLeft="708.692297824301,65.6307691468647" />
        <EdgeLayout
          Id="Package\FACT_Amount.Paths[Lookup Match Output2]"
          TopLeft="488.461532076964,187.730767323306">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-102.061535951266,0"
              Start="0,0"
              End="-94.5615359512659,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-94.5615359512659,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-127.792506256883,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Amount.Paths[Lookup Match Output1]"
          TopLeft="758.946144128878,107.230769146865">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54.8615377118953"
              Start="0,0"
              End="0,47.3615377118953">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.3615377118953" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-80.51173828125,17.8760813559477,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Amount.Paths[Lookup Match Output]"
          TopLeft="701.999990433455,183.776922019285">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-110.338458356491,0"
              Start="0,0"
              End="-102.838458356491,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-102.838458356491,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-131.930967459496,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Amount.Paths[Excel Source Output]"
          TopLeft="198.861537840275,82.1692307547882">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="46.0615357128473,0"
              Start="0,0"
              End="38.5615357128473,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="38.5615357128473,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Amount.Paths[Derived Column Output]"
          TopLeft="625.41537785255,85.3538460859889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="83.2769199717505,0"
              Start="0,0"
              End="75.7769199717505,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="75.7769199717505,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Amount.Paths[Data Conversion Output]"
          TopLeft="400.123073553122,83.5076922673447">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="72.492304299428,0"
              Start="0,0"
              End="64.992304299428,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="64.992304299428,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Amount.Paths[Aggregate Output 1]"
          TopLeft="259.999996125698,189.799996535481">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-47.3142868142351,0"
              Start="0,0"
              End="-39.8142868142351,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-39.8142868142351,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Amount\Invoice">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_Invoice]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Amount\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Amount\Store">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_Store]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Amount\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Amount\Time">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_Time]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\FACT_Sale">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="120.8,41.6"
          Id="Package\FACT_Sale\Category"
          TopLeft="661.874226409271,42.8575521914668" />
        <NodeLayout
          Size="162.4,41.6"
          Id="Package\FACT_Sale\Derived Column 1"
          TopLeft="276.723123543808,270.805620228897" />
        <NodeLayout
          Size="103.2,41.6"
          Id="Package\FACT_Sale\Store"
          TopLeft="482.187725339461,194.076848046848" />
        <NodeLayout
          Size="101.6,41.6"
          Id="Package\FACT_Sale\Time"
          TopLeft="488.3430867278,397.400000678406" />
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\FACT_Sale\OLE DB Destination"
          TopLeft="77.616584440816,340.779170032607" />
        <NodeLayout
          Size="112.8,41.6"
          Id="Package\FACT_Sale\Invoice"
          TopLeft="675.507934218725,329.118776394819" />
        <NodeLayout
          Size="155.2,41.6"
          Id="Package\FACT_Sale\Data Conversion"
          TopLeft="274.508536979153,39.3914015048643" />
        <NodeLayout
          Size="138.4,43.2"
          Id="Package\FACT_Sale\Excel Source"
          TopLeft="89.1281924417568,127.576891900939" />
        <NodeLayout
          Size="112,41.6"
          Id="Package\FACT_Sale\Vendor"
          TopLeft="474.594616309045,41.4262330334453" />
        <NodeLayout
          Size="152.8,41.6"
          Id="Package\FACT_Sale\Derived Column"
          TopLeft="281.222509835588,190.81011724329" />
        <NodeLayout
          Size="100.8,41.6"
          Id="Package\FACT_Sale\Item"
          TopLeft="673.602244400705,192.503588037911" />
        <NodeLayout
          Size="126.4,41.6"
          Id="Package\FACT_Sale\Aggregate"
          TopLeft="293.091257078593,399.032494381647" />
        <NodeLayout
          Size="117.6,41.6"
          Id="Package\FACT_Sale\Location"
          TopLeft="479.564709333154,273.253355049133" />
        <EdgeLayout
          Id="Package\FACT_Sale.Paths[Lookup Match Output6]"
          TopLeft="538.364709333154,314.853355049133">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="16.3783773946464,82.5466456292729"
              Start="0,0"
              End="16.3783773946464,75.0466456292729">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.8385428516955" />
                  <mssgle:CubicBezierSegment
                    Point1="0,35.8385428516955"
                    Point2="0,39.8385428516955"
                    Point3="4,39.8385428516955" />
                  <mssgle:LineSegment
                    End="12.3783773946463,39.8385428516955" />
                  <mssgle:CubicBezierSegment
                    Point1="12.3783773946463,39.8385428516955"
                    Point2="16.3783773946464,39.8385428516955"
                    Point3="16.3783773946464,43.8385428516955" />
                  <mssgle:LineSegment
                    End="16.3783773946464,75.0466456292729" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-40.0021980214268,44.8385428516955,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Sale.Paths[Lookup Match Output5]"
          TopLeft="675.507934218725,349.918776394819">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-78.3432248855707,-55.8654213456855"
              Start="0,0"
              End="-70.8432248855707,-55.8654213456855">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-35.1716124427854,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-35.1716124427854,0"
                    Point2="-39.1716124427854,0"
                    Point3="-39.1716124427854,-4" />
                  <mssgle:LineSegment
                    End="-39.1716124427854,-51.8654213456855" />
                  <mssgle:CubicBezierSegment
                    Point1="-39.1716124427854,-51.8654213456855"
                    Point2="-39.1716124427854,-55.8654213456855"
                    Point3="-43.1716124427854,-55.8654213456855" />
                  <mssgle:LineSegment
                    End="-70.8432248855707,-55.8654213456855" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-87.3629991615354,1,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Sale.Paths[Lookup Match Output4]"
          TopLeft="523.5430867278,397.400000678406">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-139.886629850658,-84.9943804495092"
              Start="0,0"
              End="-139.886629850658,-77.4943804495092">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-38.8006731287125" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-38.8006731287125"
                    Point2="0,-42.8006731287125"
                    Point3="-4,-42.8006731287125" />
                  <mssgle:LineSegment
                    End="-135.886629850658,-42.8006731287125" />
                  <mssgle:CubicBezierSegment
                    Point1="-135.886629850658,-42.8006731287125"
                    Point2="-139.886629850658,-42.8006731287125"
                    Point3="-139.886629850658,-46.8006731287125" />
                  <mssgle:LineSegment
                    End="-139.886629850658,-77.4943804495092" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-118.134701644079,-37.8006731287125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Sale.Paths[Lookup Match Output3]"
          TopLeft="547.927949642378,83.0262330334453">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-30.0068909695838,111.050615013402"
              Start="0,0"
              End="-30.0068909695838,103.550615013402">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.4437943100411" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.4437943100411"
                    Point2="0,55.4437943100411"
                    Point3="-4,55.4437943100411" />
                  <mssgle:LineSegment
                    End="-26.0068909695838,55.4437943100411" />
                  <mssgle:CubicBezierSegment
                    Point1="-26.0068909695838,55.4437943100411"
                    Point2="-30.0068909695838,55.4437943100411"
                    Point3="-30.0068909695838,59.4437943100411" />
                  <mssgle:LineSegment
                    End="-30.0068909695838,103.550615013402" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-63.1948322035419,60.4437943100411,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Sale.Paths[Lookup Match Output2]"
          TopLeft="549.654392006128,194.076848046848">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="153.819834403144,-109.619295855381"
              Start="0,0"
              End="153.819834403144,-102.119295855381">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-50.959037423504" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-50.959037423504"
                    Point2="0,-54.959037423504"
                    Point3="4,-54.959037423504" />
                  <mssgle:LineSegment
                    End="149.819834403144,-54.959037423504" />
                  <mssgle:CubicBezierSegment
                    Point1="149.819834403144,-54.959037423504"
                    Point2="153.819834403144,-54.959037423504"
                    Point3="153.819834403144,-58.959037423504" />
                  <mssgle:LineSegment
                    End="153.819834403144,-102.119295855381" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="28.7185304828219,-49.959037423504,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Sale.Paths[Lookup Match Output1]"
          TopLeft="727.955089309715,234.103588037911">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,95.0151883569075"
              Start="0,0"
              End="0,87.5151883569075">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,87.5151883569075" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,37.9529066784537,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Sale.Paths[Lookup Match Output]"
          TopLeft="741.074226409271,84.4575521914668">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-17.0719820085664,108.046035846444"
              Start="0,0"
              End="-17.0719820085664,100.546035846444">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.3501480692439" />
                  <mssgle:CubicBezierSegment
                    Point1="0,48.3501480692439"
                    Point2="0,52.3501480692439"
                    Point3="-4,52.3501480692439" />
                  <mssgle:LineSegment
                    End="-13.0719820085664,52.3501480692439" />
                  <mssgle:CubicBezierSegment
                    Point1="-13.0719820085664,52.3501480692439"
                    Point2="-17.0719820085664,52.3501480692439"
                    Point3="-17.0719820085664,56.3501480692439" />
                  <mssgle:LineSegment
                    End="-17.0719820085664,100.546035846444" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-56.7273777230332,57.3501480692439,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Sale.Paths[Excel Source Output]"
          TopLeft="158.328192441757,127.576891900939">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="169.247011204063,-46.5854903960743"
              Start="0,0"
              End="169.247011204063,-39.0854903960743">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-23.6660769495053" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-23.6660769495053"
                    Point2="0,-27.6660769495053"
                    Point3="4,-27.6660769495053" />
                  <mssgle:LineSegment
                    End="165.247011204063,-27.6660769495053" />
                  <mssgle:CubicBezierSegment
                    Point1="165.247011204063,-27.6660769495053"
                    Point2="169.247011204063,-27.6660769495053"
                    Point3="169.247011204063,-31.6660769495053" />
                  <mssgle:LineSegment
                    End="169.247011204063,-39.0854903960743" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Sale.Paths[Derived Column Output1]"
          TopLeft="381.755843168922,190.81011724329">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="131.50543980679,-107.783884209845"
              Start="0,0"
              End="131.50543980679,-100.283884209845">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-49.6426912617784" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-49.6426912617784"
                    Point2="0,-53.6426912617784"
                    Point3="4,-53.6426912617784" />
                  <mssgle:LineSegment
                    End="127.50543980679,-53.6426912617784" />
                  <mssgle:CubicBezierSegment
                    Point1="127.50543980679,-53.6426912617784"
                    Point2="131.50543980679,-53.6426912617784"
                    Point3="131.50543980679,-57.6426912617784" />
                  <mssgle:LineSegment
                    End="131.50543980679,-100.283884209845" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Sale.Paths[Derived Column Output]"
          TopLeft="332.189790210475,312.405620228897">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24.1014668681175,86.6268741527503"
              Start="0,0"
              End="24.1014668681175,79.1268741527503">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.1676378223605" />
                  <mssgle:CubicBezierSegment
                    Point1="0,38.1676378223605"
                    Point2="0,42.1676378223605"
                    Point3="4,42.1676378223605" />
                  <mssgle:LineSegment
                    End="20.1014668681175,42.1676378223605" />
                  <mssgle:CubicBezierSegment
                    Point1="20.1014668681175,42.1676378223605"
                    Point2="24.1014668681175,42.1676378223605"
                    Point3="24.1014668681175,46.1676378223605" />
                  <mssgle:LineSegment
                    End="24.1014668681175,79.1268741527503" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Sale.Paths[Data Conversion Output]"
          TopLeft="376.641870312487,80.9914015048643">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-43.1526938102314,109.818715738426"
              Start="0,0"
              End="-43.1526938102314,102.318715738426">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.8985251996085" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.8985251996085"
                    Point2="0,54.8985251996085"
                    Point3="-4,54.8985251996085" />
                  <mssgle:LineSegment
                    End="-39.1526938102314,54.8985251996085" />
                  <mssgle:CubicBezierSegment
                    Point1="-39.1526938102314,54.8985251996085"
                    Point2="-43.1526938102314,54.8985251996085"
                    Point3="-43.1526938102314,58.8985251996085" />
                  <mssgle:LineSegment
                    End="-43.1526938102314,102.318715738426" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\FACT_Sale.Paths[Aggregate Output 1]"
          TopLeft="293.091257078593,419.832494381647">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-45.074672637777,-58.25332434904"
              Start="0,0"
              End="-37.574672637777,-58.25332434904">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-18.5373363188885,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.5373363188885,0"
                    Point2="-22.5373363188885,0"
                    Point3="-22.5373363188885,-4" />
                  <mssgle:LineSegment
                    End="-22.5373363188885,-54.25332434904" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5373363188885,-54.25332434904"
                    Point2="-22.5373363188885,-58.25332434904"
                    Point3="-26.5373363188885,-58.25332434904" />
                  <mssgle:LineSegment
                    End="-37.574672637777,-58.25332434904" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Sale\Category">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_Category]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Sale\Store">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_Store]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Sale\Time">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_Time]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Sale\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Sale\Invoice">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_Invoice]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Sale\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Sale\Vendor">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_Vendor]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Sale\Item">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_Item]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\FACT_Sale\Location">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_Location]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>